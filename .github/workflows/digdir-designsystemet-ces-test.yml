name: digdir/designsystemet
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  checks: write
  pull-requests: write
jobs:
  checks:
    name: Build & test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: ./.github/actions/gh-setup
    - name: Build
      run: yarn build
    - name: Types
      run: yarn types:react
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test (ces) (ces)
      run: yarn test
    - name: Report Coverage
      if: success() || failure()
      uses: davelosert/vitest-coverage-report-action@v2
    - name: Publish unit test report (ces)
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: test-report.xml
        detailed_summary: true
        check_name: Unit Test Report
        check_annotations: true
        check_title_template: '{{FILE_NAME}} / {{TEST_NAME}}'
    - name: Install Playwright
      run: npx playwright install --with-deps
    - name: Build storybook
      run: yarn build:storybook
    - name: Run Storybook tests (ces)
      run: yarn test:storybook
    - name: Replace relative paths in test report (ces)
      uses: jacobtomlinson/gha-find-replace@v3
      if: success() || failure()
      with:
        include: apps/storybook/test-report.xml
        find: ../../
        replace: ''
        regex: false
    - name: Publish Storybook test report (ces)
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: apps/storybook/test-report.xml
        detailed_summary: true
        check_name: Storybook Test Report
        check_annotations: true
        check_title_template: '{{FILE_NAME}} / {{TEST_NAME}}'
