name: freelawproject/courtlistener
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tag_flags:
        - --exclude-tag selenium
        - --tag selenium
    steps:
    - name: Check out solr
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
        path: courtlistener-solr-server
    - name: Set up solr permissions
      run: |
        cd courtlistener-solr-server

        sudo chown -R :1024 data

        sudo chown -R :1024 solr

        sudo find data -type d -exec chmod g+s {} \;

        sudo find solr -type d -exec chmod g+s {} \;

        sudo find data -type d -exec chmod 775 {} \;

        sudo find solr -type d -exec chmod 775 {} \;

        sudo find data -type f -exec chmod 664 {} \;

        sudo find solr -type f -exec chmod 664 {} \;
    - name: Check out CourtListener
      uses: actions/checkout@v4
      with:
        path: courtlistener
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Create the .env settings file
      working-directory: courtlistener/
      run: cp .env.example .env.dev
    - name: Update .env.dev file
      working-directory: courtlistener/
      run: |
        echo 'SECRET_KEY=Verbal-Kint-is-Keyser-Soze' >> .env.dev

        echo 'ALLOWED_HOSTS=*' >> .env.dev
    - name: Echo github actor name for debugging
      run: echo ${{ github.actor }}
    - name: Set up docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: network=host
    - name: Prebuild docker images
      uses: docker/build-push-action@v5
      with:
        context: ./courtlistener
        file: ./courtlistener/docker/django/Dockerfile
        load: true
        build-args: >
          BUILD_ENV=dev
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Pull docker images
      working-directory: courtlistener/docker/courtlistener
      run: docker compose pull --quiet --ignore-buildable
    - name: Build docker images
      working-directory: courtlistener/docker/courtlistener
      run: docker compose build
    - name: List docker images
      run: docker image ls -a --no-trunc
    - name: Create docker network
      run: docker network create -d bridge --attachable cl_net_overlay
    - name: Start docker containers
      working-directory: courtlistener/docker/courtlistener
      run: docker compose -f docker-compose.yml -f docker-compose.tmpfs.yml up -d --no-build --pull=never
    - name: List docker containers
      run: docker ps -a --no-trunc
    - name: Show the docker startup logs
      working-directory: courtlistener/docker/courtlistener
      run: docker compose logs
    - name: Check if migrations are missing
      run: docker exec cl-django python /opt/courtlistener/manage.py makemigrations --check --dry-run
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run the tests! (ces) (ces)
      run: |
        docker exec -e SELENIUM_DEBUG=1 -e SELENIUM_TIMEOUT=30 cl-django python /opt/courtlistener/manage.py test cl --verbosity=2 ${{ matrix.tag_flags }} --parallel
    - name: cp selenium results from docker to host
      if: failure()
      run: |
        # This is annoying b/c docker cp doesn't support globs. See:

        # https://stackoverflow.com/q/35806102/

        # https://github.com/moby/moby/issues/7710

        mkdir selenium-screenshots

        docker exec cl-django bash -c "mkdir /extract && mv /tmp/*-selenium.png /extract"

        docker cp 'cl-django:/extract' selenium-screenshots/
    - name: Save selenium screenshot as Github artifacts
      uses: actions/upload-artifact@master
      if: failure()
      with:
        name: selenium-screenshots
        path: selenium-screenshots/extract
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
