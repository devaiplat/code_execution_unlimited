name: nextcloud/text
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  contents: read
concurrency:
  group: node-tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  changes:
    runs-on: ubuntu-latest-low
    permissions:
      contents: read
      pull-requests: read
    outputs:
      src: ${{ steps.changes.outputs.src}}
    steps:
    - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
      id: changes
      continue-on-error: true
      with:
        filters: >
          src:
            - '.github/workflows/**'
            - '__tests__/**'
            - '__mocks__/**'
            - 'src/**'
            - 'appinfo/info.xml'
            - 'package.json'
            - 'package-lock.json'
            - 'tsconfig.json'
            - '**.js'
            - '**.ts'
            - '**.vue'
  test:
    runs-on: ubuntu-latest
    needs: changes
    if: true
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Read package.json node and npm engines version
      uses: skjnldsv/read-package-engines-version-actions@06d6baf7d8f41934ab630e97d9e6c0bc9c9ac5e4
      id: versions
      with:
        fallbackNode: ^20
        fallbackNpm: ^10
    - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        node-version: ${{ steps.versions.outputs.nodeVersion }}
    - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
      run: npm i -g 'npm@${{ steps.versions.outputs.npmVersion }}'
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Install dependencies & build
      env:
        CYPRESS_INSTALL_BINARY: 0
      run: |
        npm ci

        npm run build --if-present
    - name: Test (ces)
      run: npm run test --if-present
    - name: Test and process coverage (ces)
      run: npm run test:coverage --if-present
    - name: Collect coverage
      uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673
      with:
        files: ./coverage/lcov.info
  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest-low
    needs:
    - changes
    - test
    if: true
    name: test-summary
    steps:
    - name: Summary status
      run: if ${{ needs.changes.outputs.src != 'false' && needs.test.result != 'success' }}; then exit 1; fi
