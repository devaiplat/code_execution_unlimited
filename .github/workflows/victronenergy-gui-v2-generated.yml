name: victronenergy/gui-v2
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  BUILD_TYPE: Release
  QT_VERSION: 6.6.1
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install dependencies
      run: |
        sudo apt-get update -yq &&

        sudo apt-get install -y  g++ build-essential mesa-common-dev libssl-dev \
                                 wget lsb libgl1-mesa-dev libxkbcommon-x11-0 libpulse-dev p7zip-full \
                                 ninja-build dos2unix libegl1 libxcb-cursor0
        sudo snap install yq
    - name: Install Qt ${{env.QT_VERSION}} linux desktop
      if: steps.cached_qt_emscripten.outputs.cache-hit != 'true'
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: ==3.1.*
        version: ${{env.QT_VERSION}}
        host: linux
        target: desktop
        arch: gcc_64
        modules: qtwebsockets qt5compat qtshadertools
        dir: /opt/hostedtoolcache
    - name: Configure CMake
      run: |
        export QTDIR=/opt/hostedtoolcache/Qt/$QT_VERSION/gcc_64

        mkdir build && cd build

        ${QTDIR}/bin/qt-cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ../tests
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build unit tests (ces) (ces)
      run: |
        cd build

        cmake --build . --config ${{env.BUILD_TYPE}}
    - name: Run unit test (ces)
      run: |
        cd build

        # The following line needs 'QT_QPA_PLATFORM=offscreen' in order to run on the headless CI server

        QT_DEBUG_PLUGINS=1 QT_QPA_PLATFORM=offscreen ctest --rerun-failed --output-on-failure
