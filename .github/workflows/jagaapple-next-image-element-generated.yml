name: jagaapple/next-image-element
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  parameters:
    name: Set parameters
    runs-on: ubuntu-latest
    outputs:
      GITHUB_SHA: ${{ steps.GITHUB_SHA.outputs.GITHUB_SHA }}
    steps:
    - id: GITHUB_SHA
      run: echo "::set-output name=GITHUB_SHA::$GITHUB_SHA"
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: parameters
    strategy:
      matrix:
        node:
        - 10.15
        - 12.13
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: Cache dependencies
      id: node-modules-dependencies
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: node-modules-${{ needs.parameters.outputs.GITHUB_SHA }}-${{ matrix.node }}
    - name: Install dependencies if needed
      if: steps.node-modules-dependencies.outputs.cache-hit != 'true'
      run: npm ci
  lint:
    name: Lint
    needs:
    - parameters
    - build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
        - 10.15
        - 12.13
    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: Restore cached dependencies
      id: node-modules-dependencies
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: node-modules-${{ needs.parameters.outputs.GITHUB_SHA }}-${{ matrix.node }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Execute linters
      run: npm run lint
