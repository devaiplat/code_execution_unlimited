name: angular/angularfire
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        check-latest: false
    - name: angular build cache
      uses: actions/cache@v3
      with:
        path: ./.angular
        key: angular-cache
    - name: node_modules cache
      uses: actions/cache@v3
      id: node_modules_cache
      with:
        path: ./node_modules
        key: ${{ runner.os }}-18-${{ hashFiles('package-lock.json') }}
        restore-keys: >
          ${{ runner.os }}-18-
    - name: Install deps
      if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: |
        npm ci
    - name: Build
      run: ./tools/build.sh
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: angularfire-${{ github.run_id }}
        path: dist
        retention-days: 1
  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        node:
        - 18
        - 20
      fail-fast: false
    name: Test Node ${{ matrix.node }} (${{ matrix.os }})
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        check-latest: true
    - name: node_modules cache
      id: node_modules_cache
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
        restore-keys: >
          ${{ runner.os }}-${{ matrix.node }}-
    - name: Install deps
      if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    - name: Relocate Artifacts
      run: mv angularfire-${{ github.run_id }} dist
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test Node (ces) (ces)
      run: |
        npm run build:jasmine

        npm run test:node
  browser:
    runs-on: ${{ matrix.os }}
    needs: build
    name: Test ${{ matrix.browser }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        browser:
        - chrome-headless
        - firefox-headless
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        check-latest: false
    - name: Setup java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - name: node_modules cache
      id: node_modules_cache
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
        restore-keys: >
          ${{ runner.os }}-${{ matrix.node }}-
    - name: Install deps
      if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Firebase emulator cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/firebase/emulators
        key: firebase_emulators
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    - name: Relocate Artifacts
      run: mv angularfire-${{ github.run_id }} dist
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test browser (ces) (ces)
      run: npm run test:${{ matrix.browser }}
  contribute:
    runs-on: ${{ matrix.os }}
    name: Contribute Node ${{ matrix.node }} (${{ matrix.os }})
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        node:
        - 18
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        check-latest: true
    - name: node_modules cache
      uses: actions/cache@v3
      id: node_modules_cache
      with:
        path: ./node_modules
        key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
        restore-keys: >
          ${{ runner.os }}-${{ matrix.node }}-
    - name: Install deps
      if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build
      run: npm run build
    - name: Test Node (ces)
      run: |
        npm run build:jasmine

        npm run test:node
    - name: Firebase emulator cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/firebase/emulators
        key: firebase_emulators
    - name: Setup java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - name: Test headless (ces)
      run: npm run test:chrome-headless
      continue-on-error: ${{ matrix.os == 'windows-latest' }}
  test_and_contribute:
    runs-on: ubuntu-latest
    name: Branch protection
    needs:
    - test
    - contribute
    - browser
    steps:
    - run: true
  publish:
    runs-on: ubuntu-latest
    name: Publish (NPM)
    needs:
    - build
    - test
    - browser
    if: true
    steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        registry-url: https://registry.npmjs.org
        check-latest: false
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    - name: Publish
      run: |
        cd ./angularfire-${{ github.run_id }}/packages-dist

        chmod +x publish.sh

        ./publish.sh
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
