name: opfab/operatorfabric-core
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions: read-all
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Job  status
      run: |
        export OF_VERSION=$(<VERSION)

        echo "----------------------------"

        echo "Trigger by  : ${{ github.event_name }}"

        echo "On branch : ${{ github.ref_name }} "

        echo "---------------------------"
    - name: Cache Gradle packages
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
      with:
        path: >
          ~/.gradle/caches

          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('gradle.properties','**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Install
      run: ./CICD/github/install.sh
    - name: Build
      run: |
        ./CICD/github/build.sh

        ./CICD/github/setOldMongoVersion.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Karate tests (ces) (ces)
      run: ./CICD/github/launch_karate_tests.sh
    - name: Cypress tests (ces)
      run: ./CICD/github/launch_cypress_tests.sh
    - name: Upload cypress screenshots
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
      if: failure()
      with:
        name: cypress-screenshots
        path: src/test/cypress/cypress/screenshots
