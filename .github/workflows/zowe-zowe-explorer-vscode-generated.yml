name: zowe/zowe-explorer-vscode
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  ze-build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    concurrency:
      group: ${{ matrix.os }}-node-${{ matrix.node-version }}-ze-ci-${{ github.ref }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        node-version:
        - 18.x
        - 20.x
        os:
        - windows-latest
        - ubuntu-latest
        - macos-latest
    if: true
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install -g pnpm@8
    - run: pnpm config set network-timeout 60000 && pnpm install && pnpm build
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: pnpm test
      env:
        CI: true
        NODE_OPTIONS: --max_old_space_size=4096
    - name: Unlock Keyring
      id: unlock-keyring
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: t1m0thyj/unlock-keyring@v1
    - name: Integration tests (ces)
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      run: xvfb-run pnpm test:integration --exclude "Activation.feature"
      working-directory: packages/zowe-explorer
    - name: Upload test results (ces)
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      with:
        name: zowe-explorer-results
        path: packages/zowe-explorer/results/
    - name: Upload API test results (ces)
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      with:
        name: zowe-explorer-api-results
        path: packages/zowe-explorer-api/results/
    - name: Upload Results to Codecov
      uses: codecov/codecov-action@v4
      with:
        env_vars: OS,NODE
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Package VSIX
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      run: pnpm package
      working-directory: packages/zowe-explorer
    - name: Archive VSIX artifact
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: zowe-explorer-vsix
        path: dist/*.vsix
