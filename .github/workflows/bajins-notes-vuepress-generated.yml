name: bajins/notes-vuepress
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  contents: read
  pull-requests: read
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Encoding
      run: |
        # git config --global i18n.logoutputencoding utf-8

        # git config --global i18n.commitencoding utf-8

        # git config --global core.quotepath false

        # git config --global http.version HTTP/1.1

        # git config --global http.postBuffer 524288000

        git config --global user.email "admin@bajins.com"

        git config --global user.name "bajins"

        # export LESSCHARSET=utf-8

        # https://github.com/vuejs/vuepress/issues/3136

        # https://stackoverflow.com/questions/74797727/error-error0308010cdigital-envelope-routinesunsupported

        # export NODE_OPTIONS=--openssl-legacy-provider
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: latest
    - run: npm install
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm run build
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v4
      with:
        personal_token: ${{ secrets.PERSONAL_TOKEN }}
        external_repository: bajins/bajins.github.io
        publish_branch: master
        publish_dir: ./docs
        force_orphan: true
        user_name: bajins
        user_email: admin@bajins.com
  sync-repository:
    runs-on: ubuntu-latest
    steps:
    - name: Global
      run: |
        git config --global user.email "admin@bajins.com"

        git config --global user.name "bajins"
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: ''
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Checkout notes-docsify repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        path: notes-docsify
        token: ${{ secrets.PERSONAL_TOKEN }}
        ref: ${{ github.event.inputs.ref }}
    - name: Sync
      run: |
        cd notes-docsify

        find . -maxdepth 1 -printf '%P\n' \
          | grep -Ev ".git.*|.nojekyll|CNAME|README.*|index.*|push.*|wercker.*" \
          | xargs rm -rf
        cd ../

        ls -lh

        cp -r `ls -A | grep -Ev \
          ".git|.github|.vuepress|.gitattributes|.gitignore|.gitmodules\
          |package.json|README.md|index.html|notes-docsify"`\
          notes-docsify
        cp -r .vuepress/public/images .vuepress/public/files notes-docsify

        # echo "-------------------------------------------------------------"

        # find $GITHUB_WORKSPACE

        # echo "-------------------------------------------------------------"

        cd notes-docsify

        echo -e '#!/bin/bash\n\n./push.sh'>.git/hooks/pre-commit

        chmod +x ./push.sh

        chmod +x .git/hooks/pre-commit

        git add -A

        git commit -m "sync"

        git push
