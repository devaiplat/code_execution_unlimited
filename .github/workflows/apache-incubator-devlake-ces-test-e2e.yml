name: apache/incubator-devlake
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  e2e-mysql:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8
        env:
          MYSQL_DATABASE: lake
          MYSQL_USER: merico
          MYSQL_PASSWORD: merico
          MYSQL_ROOT_PASSWORD: root
    container: mericodev/lake-builder:latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - run: git config --global --add safe.directory $(pwd)
    - name: Build Python
      run: |
        cd backend

        echo "Building Python"

        make build-python
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Cache test-e2e (ces) (ces)
      id: cache-test-e2e
      uses: actions/cache@v3
      with:
        path: >
          ~/.cache/go-build

          ${{ env.GOPATH }}/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: >
          ${{ runner.os }}-go-
    - name: Test-mysql (ces)
      env:
        DB_URL: mysql://root:root@db:3306/lake?charset=utf8mb4&parseTime=True
        E2E_DB_URL: mysql://root:root@db:3306/lake?charset=utf8mb4&parseTime=True
      run: |
        go version

        cp env.example .env

        cd backend

        make e2e-test-go-plugins

        make e2e-test
  e2e-postgres:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14.2
        env:
          POSTGRES_DB: lake
          POSTGRES_USER: merico
          POSTGRES_PASSWORD: merico
    container: mericodev/lake-builder:latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - run: git config --global --add safe.directory $(pwd)
    - name: Build Python
      run: |
        cd backend

        echo "Building Python"

        make build-python
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Cache test-e2e-pg (ces) (ces)
      id: cache-test-e2e-pg
      uses: actions/cache@v3
      with:
        path: >
          ~/.cache/go-build

          ${{ env.GOPATH }}/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: >
          ${{ runner.os }}-go-
    - name: Test-pg (ces)
      env:
        DB_URL: postgres://merico:merico@db:5432/lake
        E2E_DB_URL: postgres://merico:merico@db:5432/lake
      run: |
        go version

        cp env.example .env

        cd backend

        make e2e-test-go-plugins

        make e2e-test
