name: expo/expo
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 100
    env:
      ORG_GRADLE_PROJECT_reactNativeArchitectures: x86_64
      GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx3072m -XX:MaxMetaspaceSize=1024m
    steps:
    - name: ⬢ Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: "\U0001F440 Check out repository"
      uses: actions/checkout@v4
      with:
        submodules: true
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: "\U0001F9F9 Cleanup GitHub Linux runner disk space"
      uses: ./.github/actions/cleanup-linux-disk-space
    - name: "\U0001F528 Use JDK 17"
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - name: ♻️ Restore caches
      uses: ./.github/actions/expo-caches
      id: expo-caches
      with:
        yarn-workspace: true
        yarn-tools: true
        react-native-gradle-downloads: true
    - name: ➕ Add `bin` to GITHUB_PATH
      run: echo "$(pwd)/bin" >> $GITHUB_PATH
    - name: "\U0001F9F6 Install node modules in root dir"
      if: steps.expo-caches.outputs.yarn-workspace-hit != 'true'
      run: yarn install --frozen-lockfile
    - name: "\U0001F485 Run Spotless lint check"
      working-directory: apps/expo-go/android
      run: ./gradlew spotlessCheck || { echo '::error Spotless lint failed. Run `./gradlew spotlessApply` from `apps/expo-go/android` to automatically fix formatting.' && exit 1; }
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: "\U0001F3B8 Run native Android unit tests (ces) (ces)"
      if: always()
      timeout-minutes: 30
      run: expotools native-unit-tests --platform android
    - name: "\U0001F4BE Save test results (ces)"
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: packages/**/build/test-results/**/*xml
