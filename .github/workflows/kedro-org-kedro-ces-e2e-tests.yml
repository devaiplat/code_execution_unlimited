name: kedro-org/kedro
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  COLUMNS: 120
  LINES: 25
jobs:
  e2e-tests:
    runs-on: ${{ inputs.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}
        repository: ${{ github.event.inputs.repoName }}
    - name: Set up Python ${{inputs.python-version}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{inputs.python-version}}
    - name: Cache python packages for Linux
      if: inputs.os == 'ubuntu-latest'
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{inputs.os}}-python-${{inputs.python-version}}
    - name: Cache python packages for Windows
      if: inputs.os == 'windows-latest'
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{inputs.os}}-python-${{inputs.python-version}}
    - name: Add MSBuild to PATH
      if: inputs.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v2
    - name: Install Microsoft Visual C++ Redistributable
      if: inputs.os == 'windows-latest'
      run: |
        choco install vcredist-all
    - name: Setup Hadoop binary
      if: inputs.os == 'windows-latest'
      run: |
        Invoke-WebRequest "https://github.com/steveloughran/winutils/blob/master/hadoop-2.7.1/bin/winutils.exe?raw=true" -OutFile winutils.exe

        Invoke-WebRequest "https://github.com/steveloughran/winutils/blob/master/hadoop-2.7.1/bin/hadoop.dll?raw=true" -OutFile hadoop.dll

        Move-Item .\hadoop.dll C:\Windows\System32

        New-Item -ItemType directory -Path C:\hadoop\bin

        Move-Item .\winutils.exe C:\hadoop\bin

        echo "HADOOP_HOME=C:\hadoop" | Out-File -Append -Encoding ascii -FilePath $env:GITHUB_ENV

        echo "PATH=$env:HADOOP_HOME\bin;$env:PATH" | Out-File -Append -Encoding ascii -FilePath $env:GITHUB_ENV
    - name: Install dependencies
      run: |
        pip install --upgrade pip

        pip install -U .[test]

        make install-pre-commit
    - name: pip freeze
      run: pip freeze
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run e2e tests (ces) (ces)
      run: make e2e-tests
