name: benwbrum/fromthepage
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: diary_test
          MYSQL_ROOT_PASSWORD: password
        ports:
        - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    env:
      RAILS_ENV: test
      MYSQL_ROOT_PASSWORD: password
      MYSQL_SOCKET: /tmp/mysql.sock
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Ruby and gems
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.3
        bundler-cache: true
    - name: Install dependencies
      run: |
        sudo apt-get -qq update

        sudo apt-get install -y ghostscript poppler-utils graphviz pandoc texlive-full

        bundle install --jobs 4 --retry 3
    - name: Create db
      run: bundle exec rake db:create
    - name: Migrate
      run: bundle exec rake db:migrate
    - name: Load fixtures
      run: bundle exec rake db:fixtures:load FIXTURES_PATH=spec/fixtures
    - name: Run RuboCop
      run: bundle exec rubocop
      continue-on-error: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      uses: coactions/setup-xvfb@v1
      with:
        run: bundle exec rspec spec
      env:
        COVERAGE: true
        CI: true
    - name: Run Coveralls
      if: ${{ github.event_name == 'pull_request' }}
      uses: coverallsapp/github-action@v2.3.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/lcov.info
