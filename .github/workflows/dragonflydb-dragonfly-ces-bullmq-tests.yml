name: dragonflydb/dragonfly
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    timeout-minutes: 60
    container:
      image: ghcr.io/romange/alpine-dev:latest
      options: --security-opt seccomp=unconfined
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install NodeJs
      run: |
        apk add --no-cache nodejs npm yarn

        node --version

        npm --version

        yarn --version

        mkdir -p $GITHUB_WORKSPACE/build
    - name: Configure/Build
      run: |
        cd $GITHUB_WORKSPACE/build

        cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja

        ninja dragonfly

        ./dragonfly --alsologtostderr &
    - name: Clone and build BullMQ
      run: |
        git clone https://github.com/taskforcesh/bullmq.git

        cd bullmq

        pwd

        yarn install --ignore-engines --frozen-lockfile --non-interactive

        yarn build
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test BullMQ (ces) (ces)
      run: |
        cd $GITHUB_WORKSPACE/bullmq

        # yarn test -i -g "should process delayed jobs with several workers respecting delay"
