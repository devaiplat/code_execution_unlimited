name: google/error-prone
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build-maven-jars:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: zulu
        cache: maven
        server-id: ossrh
        server-username: CI_DEPLOY_USERNAME
        server-password: CI_DEPLOY_PASSWORD
        gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Bump Version Number
      run: |
        mvn --no-transfer-progress versions:set versions:commit -DnewVersion="${{ github.event.inputs.version }}"

        git ls-files | grep 'pom.xml$' | xargs git add

        git config --global user.email "${{ github.actor }}@users.noreply.github.com"

        git config --global user.name "${{ github.actor }}"

        git commit -m "Release Error Prone ${{ github.event.inputs.version }}"

        git tag "v${{ github.event.inputs.version }}"

        echo "TARGET_COMMITISH=$(git rev-parse HEAD)" >> $GITHUB_ENV

        git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/google/error-prone.git
    - name: Deploy to Sonatype
      env:
        CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
        CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: mvn --no-transfer-progress -P release clean deploy -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"
    - name: Push tag
      run: |
        git push origin "v${{ github.event.inputs.version }}"
    - name: Draft Release Entry
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        name: Error Prone ${{ github.event.input.version }}
        generate_release_notes: true
        tag_name: v${{ github.event.inputs.version }}
        target_commitish: ${{ env.TARGET_COMMITISH }}
