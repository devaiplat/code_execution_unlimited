name: alphagov/govuk-frontend
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  install:
    name: Install
    runs-on: ${{ matrix.runner }}
    env:
      PUPPETEER_SKIP_DOWNLOAD: true
    strategy:
      fail-fast: false
      matrix:
        runner:
        - ubuntu-latest
        - windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install dependencies
      uses: ./.github/workflows/actions/install-node
  build:
    name: Build
    runs-on: ${{ matrix.runner }}
    needs:
    - install
    strategy:
      fail-fast: false
      matrix:
        runner:
        - ubuntu-latest
        - windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Restore dependencies
      uses: ./.github/workflows/actions/install-node
    - name: Build
      uses: ./.github/workflows/actions/build
  lint:
    name: ${{ matrix.task.description }} (${{ matrix.runner }})
    runs-on: ${{ matrix.runner }}
    needs:
    - install
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        runner:
        - ubuntu-latest
        - windows-latest
        task:
        - description: Lint Sass
          name: lint-scss
          run: npm run lint:scss
          cache: .cache/stylelint
        - description: Lint JavaScript
          name: lint-js
          run: npm run lint:js
          cache: .cache/eslint
        - description: EditorConfig
          name: lint-editorconfig
          run: npm run lint:editorconfig
        - description: Prettier
          name: lint-prettier
          run: npm run lint:prettier
          cache: .cache/prettier
        - description: TypeScript compiler
          name: lint-types
          run: npm run lint:types -- --incremental --pretty
          cache: '**/*.tsbuildinfo'
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Restore dependencies
      uses: ./.github/workflows/actions/install-node
    - name: Cache linter
      if: ${{ matrix.task.cache }}
      uses: actions/cache@v4.0.2
      with:
        enableCrossOsArchive: true
        key: ${{ matrix.task.name }}-${{ runner.os }}
        path: ${{ matrix.task.cache }}
    - name: Run lint task
      run: ${{ matrix.task.run }}
  test:
    name: ${{ matrix.task.description }} (${{ matrix.runner }})
    runs-on: ${{ matrix.runner }}
    needs:
    - install
    - build
    strategy:
      fail-fast: false
      matrix:
        runner:
        - ubuntu-latest
        - windows-latest
        task:
        - description: Nunjucks macro tests
          name: test-macro
          cache: .cache/jest
          projects:
          - Nunjucks macro tests
        - description: JavaScript unit tests
          name: test-unit
          cache: .cache/jest
          coverage: true
          projects:
          - JavaScript unit tests
        - description: JavaScript behaviour tests
          name: test-behaviour
          cache: .cache/jest
          coverage: true
          projects:
          - JavaScript behaviour tests
        - description: JavaScript component tests
          name: test-component
          cache: >
            .cache/jest

            .cache/puppeteer
          projects:
          - JavaScript component tests
        - description: Accessibility tests
          name: test-accessibility
          cache: >
            .cache/jest

            .cache/puppeteer
          projects:
          - Accessibility tests
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Restore dependencies
      uses: ./.github/workflows/actions/install-node
    - name: Restore build
      uses: ./.github/workflows/actions/build
    - name: Cache task
      if: ${{ matrix.task.cache }}
      uses: actions/cache@v4.0.2
      with:
        enableCrossOsArchive: true
        key: ${{ matrix.task.name }}-${{ runner.os }}
        path: ${{ matrix.task.cache }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run test task (ces) (ces)
      run: npx jest --color ${{ format('--coverage={0} --maxWorkers=2 --selectProjects "{1}"', matrix.task.coverage || false, join(matrix.task.projects, '", "')) }}
    - name: Save test coverage (ces)
      uses: actions/upload-artifact@v4.4.0
      with:
        name: ${{ matrix.task.description }} coverage (${{ matrix.runner }})
        path: coverage
        if-no-files-found: ignore
  verify:
    name: ${{ matrix.task.description }} (${{ matrix.runner }})
    runs-on: ${{ matrix.runner }}
    needs:
    - install
    - build
    strategy:
      fail-fast: false
      matrix:
        runner:
        - ubuntu-latest
        - windows-latest
        task:
        - description: Verify package build
          name: test-build-package
          run: npm run build:package
        - description: Verify distribution build
          name: test-build-release
          run: npm run build:release
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Restore dependencies
      uses: ./.github/workflows/actions/install-node
    - name: Restore build
      uses: ./.github/workflows/actions/build
    - name: Run verify task
      run: ${{ matrix.task.run }}
  package:
    name: Export ${{ matrix.conditions }}, Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    needs:
    - install
    - build
    strategy:
      fail-fast: false
      matrix:
        node-version:
        - 12
        - 18
        - 20
        conditions:
        - require
        - import
        include:
        - conditions: require
          node-version: 12.18
    env:
      FLAGS: ${{ matrix.conditions != 'require' && format(' --conditions {0}', matrix.conditions) || '' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Restore build
      uses: ./.github/workflows/actions/build
    - name: Change Node.js version
      uses: actions/setup-node@v4.0.4
      with:
        node-version: ${{ matrix.node-version }}
    - run: node --eval "console.log(require.resolve('govuk-frontend'))"${{ env.FLAGS }}
      working-directory: packages/govuk-frontend
    - run: node --eval "console.log(require.resolve('govuk-frontend/package.json'))"${{ env.FLAGS }}
      working-directory: packages/govuk-frontend
    - run: node --eval "console.log(require.resolve('govuk-frontend/dist/govuk/components/accordion/accordion.bundle.js'))"${{ env.FLAGS }}
      working-directory: packages/govuk-frontend
    - run: node --eval "console.log(require.resolve('govuk-frontend/dist/govuk/components/accordion/accordion.bundle.mjs'))"${{ env.FLAGS }}
      working-directory: packages/govuk-frontend
    - run: node --eval "console.log(require.resolve('govuk-frontend/dist/govuk/i18n.mjs'))"${{ env.FLAGS }}
      working-directory: packages/govuk-frontend
  regression:
    name: Percy
    needs:
    - install
    - build
    uses: ./.github/workflows/screenshots.yml
    secrets: inherit
  generate-diff-package:
    name: Diff changes to npm package
    needs:
    - install
    permissions:
      pull-requests: write
    uses: ./.github/workflows/diff-change-to-package.yaml
  generate-stats:
    name: Stats comment
    needs:
    - install
    permissions:
      pull-requests: write
    uses: ./.github/workflows/stats-comment.yml
  bundler-integrations:
    name: Bundler integrations
    needs:
    - install
    - build
    uses: ./.github/workflows/bundler-integrations.yml
