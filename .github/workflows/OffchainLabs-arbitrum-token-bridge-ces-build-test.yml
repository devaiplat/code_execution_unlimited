name: OffchainLabs/arbitrum-token-bridge
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  NEXT_PUBLIC_INFURA_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_KEY }}
  NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID }}
  THE_GRAPH_NETWORK_API_KEY: ${{ secrets.THE_GRAPH_NETWORK_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  check-files:
    name: Check files
    runs-on: ubuntu-latest
    outputs:
      run_tests: ${{ steps.check-files.outputs.run_tests }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: ./.github/actions/check-files
      id: check-files
  build:
    name: Build
    runs-on: ubuntu-latest
    if: true
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install node_modules
      uses: OffchainLabs/actions/node-modules/install@main
    - name: Build
      run: yarn build
      env:
        NEXT_PUBLIC_IS_E2E_TEST: true
        NEXT_PUBLIC_INFURA_KEY: ${{ secrets.NEXT_PUBLIC_INFURA_KEY }}
        NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID }}
        THE_GRAPH_NETWORK_API_KEY: ${{ secrets.THE_GRAPH_NETWORK_API_KEY }}
    - name: Cache build artifacts
      uses: ./.github/actions/build-artifacts/cache
  test-ui:
    name: Test UI
    runs-on: ubuntu-latest
    needs:
    - build
    - check-files
    if: true
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install node_modules
      uses: OffchainLabs/actions/node-modules/install@main
    - name: Restore build artifacts
      uses: ./.github/actions/build-artifacts/restore
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Start UI and Test (ces) (ces)
      run: yarn start-server-and-test 'start' http://127.0.0.1:3000 'yarn test:ci'
  audit:
    name: Audit
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install node_modules
      uses: OffchainLabs/actions/node-modules/install@main
    - name: Run audit
      run: yarn audit:ci
  check-formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install node_modules
      uses: OffchainLabs/actions/node-modules/install@main
    - name: Check formatting with Prettier
      run: yarn prettier:check
    - name: Check formatting with ESLint
      run: yarn lint
  e2e-tests:
    name: E2E Tests
    needs:
    - build
    - check-files
    uses: ./.github/workflows/e2e-tests.yml
    with:
      test_type: regular
    secrets: inherit
  test-e2e-success:
    name: Test E2E Success
    runs-on: ubuntu-latest
    needs:
    - e2e-tests
    if: true
    steps:
    - name: Regular E2E Succeeded
      if: needs.e2e-tests.result == 'success' || needs.e2e-tests.result == 'skipped'
      run: echo "Regular E2E tests passed"
    - name: Regular E2E Failed
      if: needs.e2e-tests.result != 'success' && needs.e2e-tests.result != 'skipped'
      run: exit 1
