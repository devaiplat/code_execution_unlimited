name: NOAA-EMC/GDASApp
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  ctests:
    runs-on: ubuntu-latest
    name: Run Unit Tests with ctest
    steps:
    - name: Install pip dependencies
      run: |
        pip install --upgrade pip

        pip install pycodestyle

        pip install netCDF4

        pip install xarray
    - name: Checkout wxflow
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
        path: wxflow
    - name: Install wxflow
      run: |
        cd wxflow

        pip install .
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: GDASApp
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install ecBuild
      run: |
        git clone https://github.com/ecmwf/ecbuild.git ecbuild

        cd ecbuild

        git checkout 3.6.1

        mkdir bootstrap

        cd bootstrap

        ../bin/ecbuild ..

        sudo make install
    - name: Configure with cmake
      run: |
        mkdir $GITHUB_WORKSPACE/build && cd $GITHUB_WORKSPACE/build

        cmake -DBUILD_GDASBUNDLE=OFF $GITHUB_WORKSPACE/GDASApp
    - name: Build GDASApp
      run: |
        cd $GITHUB_WORKSPACE/build

        make
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run ctest (ces) (ces)
      run: |
        cd $GITHUB_WORKSPACE/build

        ctest --output-on-failure
