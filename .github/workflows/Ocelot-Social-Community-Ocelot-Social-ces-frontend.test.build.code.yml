name: Ocelot-Social-Community/Ocelot-Social
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  files-changed:
    name: Detect File Changes - frontend-test-build-code
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.frontend-test-build-code }}
    steps:
    - uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Check for frontend file changes
      uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
      id: changes
      with:
        token: ${{ github.token }}
        filters: .github/file-filters.yml
        list-files: shell
  build:
    if: true
    name: Build - Frontend
    needs: files-changed
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: ./frontend
    steps:
    - name: Checkout code
      uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Frontend | Build
      run: npm install && npm run build
      working-directory: ${{env.WORKING_DIRECTORY}}
