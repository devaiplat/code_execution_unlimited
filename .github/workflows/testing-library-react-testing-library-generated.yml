name: testing-library/react-testing-library
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  actions: write
  contents: read
jobs:
  main:
    continue-on-error: ${{ matrix.react != 'latest' }}
    if: true
    strategy:
      fail-fast: false
      matrix:
        node:
        - 18
        - 20
        react:
        - 18.x
        - latest
        - canary
        - experimental
    runs-on: ubuntu-latest
    steps:
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: ⎔ Setup node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
    - name: "\U0001F4E5 Download deps"
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Verify format (`npm run format` committed?)
      run: npm run format -- --check --no-write
    - name: ⚛️ Setup react
      run: npm install react@${{ matrix.react }} react-dom@${{ matrix.react }}
    - name: ▶️ Run validate script
      run: npm run validate
    - name: ⬆️ Upload coverage report
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        flags: ${{ matrix.react }}
        token: ${{ secrets.CODECOV_TOKEN }}
  release:
    permissions:
      actions: write
      contents: write
      issues: write
    needs: main
    runs-on: ubuntu-latest
    if: true
    steps:
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: ⎔ Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 14
    - name: "\U0001F4E5 Download deps"
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: "\U0001F3D7 Run build script"
      run: npm run build
    - name: "\U0001F680 Release"
      uses: cycjimmy/semantic-release-action@v2
      with:
        semantic_version: 17
        branches: >
          [
            '+([0-9])?(.{+([0-9]),x}).x',
            'main',
            'next',
            'next-major',
            {name: 'beta', prerelease: true},
            {name: 'alpha', prerelease: true}
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
