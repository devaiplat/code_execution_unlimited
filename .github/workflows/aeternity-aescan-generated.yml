name: aeternity/aescan
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  ENV: dev
  APP: aescan-testnet
concurrency: aescan_develop_environment-${{ github.ref }}
jobs:
  main:
    runs-on: ubuntu-latest
    environment: develop
    name: build
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Get commit sha on PR Sync
      if: github.event_name == 'push'
      id: git-sha
      shell: bash
      run: |
        echo GIT_SHA=$(git rev-parse --short HEAD) >> $GITHUB_OUTPUT
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
      with:
        install: true
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-${{ env.ENV }}-buildx-${{ github.sha }}
        restore-keys: >
          ${{ runner.os }}-${{ env.ENV }}-buildx
    - name: Log in to dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASS }}
    - name: Extract metadata for docker
      if: github.event_name == 'push'
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: aeternity/aescan
        tags: >
          type=raw,value=develop,enable=${{ endsWith(GitHub.ref, 'develop') }}
    - name: Create dotenv
      run: |
        echo APP_VERSION=$(git describe --tags)-dev >> .env
    - name: Build and push docker image
      if: github.event_name == 'push'
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        build-args: BUILD_MODE=development
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
    - name: Move cache
      if: github.event_name == 'push'
      run: |
        rm -rf /tmp/.buildx-cache

        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repoName }}
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        ref: ${{ github.event.inputs.ref }}
        persist-credentials: false
        fetch-depth: 0
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Latest Develop Branch Deploy on Push (ces) (ces)
      if: github.event_name == 'push'
      uses: aeternity/ae-github-actions/argocd-pr-sync@v5
      with:
        git-sha: ${{ steps.git-sha.outputs.GIT_SHA }}
        url-prefix: develop
        env: ${{ env.ENV }}
        app: ${{ env.APP }}
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        repository: aeternity/gitops-apps-aelabs
        github_token: ${{ secrets.BOT_GITHUB_TOKEN }}
        branch: dev
