name: truenas/charts
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  lint:
    name: Lint Charts
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        helm-version:
        - v3.9.4
        - v3.10.3
        - v3.12.1
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Helm
      uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78
      with:
        version: ${{ matrix.helm-version }}
    - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236
      with:
        python-version: 3.10
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Set up chart-testing (ces) (ces)
      uses: helm/chart-testing-action@b43128a8b25298e1e7b043b78ea6613844e079b1
    - name: Run chart-testing (lint) (ces)
      id: lint
      run: |
        ct lint --config .github/ct-install-config/charts-ct-lint.yaml
  list-changed:
    needs:
    - lint
    name: List Changed Charts
    runs-on: ubuntu-22.04
    outputs:
      changed_json: ${{ steps.list-changed.outputs.changed_json }}
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Set up chart-testing (ces) (ces)
      uses: helm/chart-testing-action@b43128a8b25298e1e7b043b78ea6613844e079b1
    - name: List Changed Charts
      id: list-changed
      shell: bash
      run: |
        changed_json=$(ct list-changed \
          --config .github/ct-install-config/charts-ct-install.yaml | \
          jq --raw-input '.' | jq --compact-output --slurp '.')

        echo "changed_json=$changed_json" >> $GITHUB_OUTPUT

        echo 'Detected changes in the following charts:'

        echo "$changed_json" | jq --raw-output '.[]'
  install:
    needs:
    - lint
    - list-changed
    name: Install Chart
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        chart: ${{ fromJson(needs.list-changed.outputs.changed_json) }}
        helm-version:
        - v3.9.4
        - v3.12.1
        k3s-version:
        - v1.26.15+k3s1
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Helm
      uses: azure/setup-helm@f382f75448129b3be48f8121b9857be18d815a82
      with:
        version: ${{ matrix.helm-version }}
    - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236
      with:
        python-version: 3.10
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Set up chart-testing (ces) (ces)
      uses: helm/chart-testing-action@b43128a8b25298e1e7b043b78ea6613844e079b1
    - name: Create k3d cluster - Attempt 1/3
      continue-on-error: true
      id: createc1
      uses: nolar/setup-k3d-k3s@293b8e5822a20bc0d5bcdd4826f1a665e72aba96
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        version: ${{ matrix.k3s-version }}
        k3d-args: --k3s-arg --disable=metrics-server@server:*
    - name: Wait 10 second to retry
      if: steps.createc1.outcome=='failure'
      run: |
        sleep 10
    - name: Create k3d cluster - Attempt 2/3
      continue-on-error: true
      if: steps.createc1.outcome=='failure'
      id: createc2
      uses: nolar/setup-k3d-k3s@293b8e5822a20bc0d5bcdd4826f1a665e72aba96
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        version: ${{ matrix.k3s-version }}
        k3d-args: --k3s-arg --disable=metrics-server@server:*
    - name: Wait 10 second to retry
      if: steps.createc2.outcome=='failure'
      run: |
        sleep 10
    - name: Create k3d cluster - Attempt 3/3
      id: createc3
      if: steps.createc2.outcome=='failure'
      uses: nolar/setup-k3d-k3s@293b8e5822a20bc0d5bcdd4826f1a665e72aba96
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        version: ${{ matrix.k3s-version }}
        k3d-args: --k3s-arg --disable=metrics-server@server:*
    - name: Run chart-testing (install) (ces)
      shell: bash
      run: |
        ct install --config .github/ct-install-config/charts-ct-install.yaml --charts ${{ matrix.chart }}
