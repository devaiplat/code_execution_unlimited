name: cortezaproject/corteza
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  BUILD_OS: linux
  BUILD_ARCH: amd64
  GO_VERSION: 1.19
  GOFLAGS: -mod=readonly
  WORKFLOW_STACK_TRACE_FULL: true
  NODE_VERSION: 16
jobs:
  lib-test:
    name: Library test (${{ matrix.lib }})
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        lib:
        - js
        - vue
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    - uses: actions/cache@v3
      if: ${{ !env.ACT }}
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.OS }}-node-${{ matrix.lib }}
    - name: Setup YARN
      run: npm install -g yarn @vue/cli-service
    - name: Install dependencies
      working-directory: lib/${{ matrix.lib }}
      run: yarn install
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run all tests (ces) (ces)
      working-directory: lib/${{ matrix.lib }}
      run: yarn test:unit
  client-web-test:
    name: Web client test (${{ matrix.app }})
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        app:
        - admin
        - compose
        - discovery
        - privacy
        - reporter
        - one
        - workflow
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Setup YARN
      working-directory: client/web/${{ matrix.app }}
      run: npm install -g yarn @vue/cli-service
    - name: Cache
      uses: actions/cache@v3
      if: ${{ !env.ACT }}
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.OS }}-node-
    - name: Dependencies
      working-directory: client/web/${{ matrix.app }}
      run: make dep
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Tests (ces) (ces)
      working-directory: client/web/${{ matrix.app }}
      run: make test
  server-test:
    name: Server tests
    runs-on: ubuntu-20.04
    env:
      GOFLAGS: -mod=readonly
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Copy language files
      working-directory: server/pkg/locale
      run: make src/en
    - name: Unit
      working-directory: server
      run: make test.unit
    - name: Store
      working-directory: server
      run: make test.store
    - name: Integration
      working-directory: server
      run: make test.integration
  notify:
    if: true
    name: Send matrix testing notification
    runs-on: ubuntu-20.04
    needs:
    - server-test
    - client-web-test
    - lib-test
    steps:
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Send message via Matrix on failed tests (ces) (ces)
      if: ${{ !env.ACT && failure() }}
      id: matrix-chat-tests-failed
      uses: fadenb/matrix-chat-message@v0.0.6
      with:
        homeserver: ${{ secrets.MATRIX_HOME_SERVER }}
        token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
        channel: ${{ secrets.MATRIX_ROOM_ID }}
        message: >
          # Corteza **${GITHUB_REF##*/}** tests have failed
