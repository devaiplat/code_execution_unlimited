name: puppeteer/puppeteer
permissions: read-all
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  inspect-code:
    name: '[Required] Inspect code'
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        fetch-depth: 2
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - uses: google/wireit@83d7f8bed70b7bcfc40f4b9f54f4b7485753991b
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Check code
      run: npm run check
    - name: Validate licenses
      run: npm run validate-licenses
    - name: Build every package
      run: npm run build
    - name: Tests types (ces)
      run: npm run test-types
    - name: Lint code
      run: npm run lint
    - name: Generate documents
      run: npm run docs
    - name: Check if autogenerated docs differ
      run: |
        diff_file=$(mktemp doc_diff_XXXXXX)

        git diff --color > $diff_file

        if [[ -s $diff_file ]]; then
          echo "Please update the documentation by running 'npm run docs'. The following was the diff"
          cat $diff_file
          rm $diff_file
          exit 1
        fi

        rm $diff_file
  check-changes:
    uses: ./.github/workflows/changed-packages.yml
    with:
      check-mergeable-state: true
  deploy-docs:
    needs: check-changes
    name: Deploy docs (if needed)
    if: true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      working-directory: ./website
      run: npm ci
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build website
      working-directory: ./website
      env:
        NODE_OPTIONS: --max-old-space-size=6144
      run: npm run build
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./website/build
        user_name: release-please[bot]
        user_email: 55107282+release-please[bot]@users.noreply.github.com
    - name: Test Algolia if Crawler is blocked (ces)
      env:
        CRAWLER_USER_ID: ${{secrets.ALGOLIA_CRAWLER_USER_ID}}
        CRAWLER_API_KEY: ${{secrets.ALGOLIA_CRAWLER_API_KEY}}
        CRAWLER_ID: ${{secrets.ALGOLIA_CRAWLER_ID}}
      run: |
        RESPONSE=$(curl -H "Content-Type: application/json" -X GET --user "$CRAWLER_USER_ID:$CRAWLER_API_KEY" \
          "https://crawler.algolia.com/api/1/crawlers/$CRAWLER_ID" | grep "\"blocked\":true" || true ); \
        if [ ! -z "$RESPONSE" ]; then echo "Please go to https://crawler.algolia.com/" && exit 1; fi
    - name: Trigger Algolia reindexing
      env:
        CRAWLER_USER_ID: ${{secrets.ALGOLIA_CRAWLER_USER_ID}}
        CRAWLER_API_KEY: ${{secrets.ALGOLIA_CRAWLER_API_KEY}}
        CRAWLER_ID: ${{secrets.ALGOLIA_CRAWLER_ID}}
      run: |
        curl -H "Content-Type: application/json" -X POST --user "$CRAWLER_USER_ID:$CRAWLER_API_KEY" \
          "https://crawler.algolia.com/api/1/crawlers/$CRAWLER_ID/reindex"
  doctest:
    name: Doctest
    runs-on: ubuntu-latest
    needs: check-changes
    if: true
    steps:
    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: npm run doctest
  chrome-tests:
    name: ${{ matrix.suite }} (${{ matrix.shard }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: true
    strategy:
      fail-fast: false
      matrix:
        linux-only:
        - ${{ github.event_name == 'pull_request' && !contains(github.head_ref, 'release-please') && !contains(github.event.pull_request.labels.*.name, 'full-ci') }}
        suite:
        - chrome-headless
        - chrome-headful
        - chrome-headless-shell
        - chrome-bidi
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        shard:
        - 1-2
        - 2-2
        exclude:
        - linux-only: true
          os: windows-latest
        - linux-only: true
          os: macos-latest
        - linux-only: true
          suite: chrome-headful
        - os: windows-latest
          suite: chrome-bidi
        - os: macos-latest
          suite: chrome-headful
    steps:
    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - uses: google/wireit@83d7f8bed70b7bcfc40f4b9f54f4b7485753991b
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build packages
      run: npm run build --workspace @puppeteer-test/test
    - name: Setup cache for browsers
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
      with:
        path: ~/.cache/puppeteer/
        key: Browsers-${{ runner.os }}-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
    - name: Install browsers
      run: npm run postinstall
    - name: Run all tests (for non-Linux) (ces)
      if: ${{ matrix.os != 'ubuntu-latest' }}
      run: npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
    - name: Run all tests (for Linux) (ces)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: xvfb-run --auto-servernum npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
    - uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.suite }}-${{ matrix.shard }}
        path: /tmp/artifacts/*.json
  chrome-tests-required:
    name: '[Required] Chrome tests'
    needs:
    - check-changes
    - chrome-tests
    runs-on: ubuntu-latest
    if: true
    steps:
    - if: ${{ needs.chrome-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
      run: exit 1
    - run: exit 0
  firefox-tests:
    name: ${{ matrix.suite }} (${{ matrix.shard }}) on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: true
    strategy:
      fail-fast: false
      matrix:
        linux-only:
        - ${{ github.event_name == 'pull_request' && !contains(github.head_ref, 'release-please') && !contains(github.event.pull_request.labels.*.name, 'full-ci') }}
        suite:
        - firefox-cdp
        - firefox-headful
        - firefox-headless
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        shard:
        - 1-4
        - 2-4
        - 3-4
        - 4-4
        exclude:
        - linux-only: true
          os: windows-latest
        - linux-only: true
          os: macos-latest
        - os: macos-latest
          suite: firefox-cdp
        - os: windows-latest
          suite: firefox-cdp
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - uses: google/wireit@83d7f8bed70b7bcfc40f4b9f54f4b7485753991b
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build packages
      run: npm run build --workspace @puppeteer-test/test
    - name: Setup cache for browsers
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
      with:
        path: ~/.cache/puppeteer/
        key: Browsers-${{ runner.os }}-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
    - name: Install browsers
      run: npm run postinstall
    - name: Run all tests (for non-Linux) (ces)
      if: ${{ matrix.os != 'ubuntu-latest' }}
      run: npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
    - name: Run all tests (for Linux) (ces)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: xvfb-run --auto-servernum npm run test -- --shard '${{ matrix.shard }}' --test-suite ${{ matrix.suite }} --save-stats-to /tmp/artifacts/${{ github.event_name }}_INSERTID.json
    - uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.suite }}-${{ matrix.shard }}
        path: /tmp/artifacts/*.json
  firefox-tests-required:
    name: '[Required] Firefox tests'
    needs:
    - check-changes
    - firefox-tests
    runs-on: ubuntu-latest
    if: true
    steps:
    - if: ${{ needs.firefox-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
      run: exit 1
    - run: exit 0
  installation-test:
    name: ${{ matrix.pkg_manager }} installation on ${{ matrix.os }}
    needs: check-changes
    if: true
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        linux-only:
        - ${{ github.event_name == 'pull_request' && !contains(github.head_ref, 'release-please') && !contains(github.event.pull_request.labels.*.name, 'full-ci') }}
        pkg_manager:
        - npm
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        exclude:
        - linux-only: true
          os: windows-latest
        - linux-only: true
          os: macos-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - uses: google/wireit@83d7f8bed70b7bcfc40f4b9f54f4b7485753991b
    - name: Setup cache for browsers
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
      with:
        path: ~/.cache/puppeteer/
        key: Browsers-${{ runner.os }}-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Install browsers
      run: npm run postinstall
    - name: Test install (ces)
      env:
        PKG_MANAGER: ${{ matrix.pkg_manager }}
      run: ${{ matrix.pkg_manager }} run test-install
  installation-test-required:
    name: '[Required] Installation tests'
    needs:
    - check-changes
    - installation-test
    runs-on: ubuntu-latest
    if: true
    steps:
    - if: ${{ needs.installation-test.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'puppeteer') }}
      run: exit 1
    - run: exit 0
  docker-tests:
    name: '[Required] Docker image test'
    runs-on: ubuntu-latest
    needs: check-changes
    if: true
    steps:
    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        fetch-depth: 2
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build packages
      run: npm run build --workspace puppeteer
    - name: Pack packages
      run: docker/pack.sh
    - name: Build docker image
      working-directory: ./docker
      run: |
        docker build -t puppeteer-test-image .
    - name: Run smoke test (ces)
      working-directory: ./docker
      run: |
        docker run -i --init --cap-add=SYS_ADMIN --rm puppeteer-test-image node -e "`cat test/smoke-test.js`"
  unit-tests:
    name: '[Required] Puppeteer Unit tests'
    runs-on: ubuntu-latest
    needs: check-changes
    if: true
    steps:
    - name: Check out repository
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run unit tests (ces) (ces)
      run: |
        npm run unit -w puppeteer-core -w puppeteer --if-present
  ng-schematics-unit:
    name: '[Required] Angular Schematics tests'
    runs-on: ubuntu-latest
    needs: check-changes
    if: true
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: npm run unit --workspace @puppeteer/ng-schematics
  ng-schematics-smoke-tests:
    name: Angular Schematics smoke tests on ${{ matrix.os }} ${{ matrix.test-runner }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: true
    strategy:
      fail-fast: false
      matrix:
        linux-only:
        - ${{ github.event_name == 'pull_request' && !contains(github.head_ref, 'release-please') && !contains(github.event.pull_request.labels.*.name, 'full-ci') }}
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        test-runner:
        - node
        - jest
        - jasmine
        - mocha
        exclude:
        - linux-only: true
          os: windows-latest
        - linux-only: true
          os: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - name: Setup cache for browsers
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
      with:
        path: ~/.cache/puppeteer/chrome
        key: Browsers-${{ runner.os }}-${{ hashFiles('packages/puppeteer-core/src/revisions.ts') }}-${{ hashFiles('packages/puppeteer/src/node/install.ts') }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build all and schematics
      run: npm run build
    - name: Install Browsers
      run: npm run postinstall
    - name: Run tests (ces)
      run: node tools/smoke.mjs -r ${{ matrix.test-runner }}
      working-directory: ./packages/ng-schematics
  ng-schematics-smoke-tests-required:
    name: '[Required] Angular Schematics smoke tests'
    needs:
    - check-changes
    - ng-schematics-smoke-tests
    runs-on: ubuntu-latest
    if: true
    steps:
    - if: ${{ needs.ng-schematics-smoke-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'ng-schematics') }}
      run: exit 1
    - run: exit 0
  browsers-tests:
    name: Browsers tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check-changes
    if: true
    strategy:
      fail-fast: false
      matrix:
        linux-only:
        - ${{ github.event_name == 'pull_request' && !contains(github.head_ref, 'release-please') && !contains(github.event.pull_request.labels.*.name, 'full-ci') }}
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        exclude:
        - linux-only: true
          os: windows-latest
        - linux-only: true
          os: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        cache: npm
        node-version-file: .nvmrc
    - name: Install dependencies
      run: npm ci
      env:
        PUPPETEER_SKIP_DOWNLOAD: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: npm run test --workspace @puppeteer/browsers
  browsers-tests-required:
    name: '[Required] Test the browsers packages'
    needs:
    - check-changes
    - browsers-tests
    runs-on: ubuntu-latest
    if: true
    steps:
    - if: ${{ needs.browsers-tests.result != 'success' && contains(fromJSON(needs.check-changes.outputs.changes), 'browsers') }}
      run: exit 1
    - run: exit 0
