name: scipp/scipp
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build_and_test:
    name: build and test ${{ matrix.variant.os }}, py${{ matrix.python-version }}
    runs-on: ${{ matrix.variant.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        variant:
        - os: ubuntu-22.04
          cmake-preset: ci-linux
        - os: macos-14
          cmake-preset: ci-macos
        - os: windows-2019
          cmake-preset: ci-windows
        python-version:
        - 3.10
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Setup conda environment
      uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: 1.5.6-0
        environment-file: .buildconfig/${{ matrix.variant.cmake-preset }}.yml
        cache-environment: true
        create-args: python=${{ matrix.python-version }}
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.14
      with:
        key: ${{ matrix.variant.os }}
    - name: Cache conan setup
      id: conan-cache-key
      run: |
        echo "key=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT

        echo "path=$(conan config home)" >> $GITHUB_OUTPUT
    - name: Cache conan
      uses: actions/cache@v4
      with:
        path: ${{ steps.conan-cache-key.outputs.path }}
        key: conan-${{ matrix.variant.os }}-${{ steps.conan-cache-key.outputs.key }}
    - run: cmake --preset ${{ matrix.variant.cmake-preset }}
    - run: cmake --build --preset build
    - run: ctest --preset test
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: tox -e nightlydeps -vvv
