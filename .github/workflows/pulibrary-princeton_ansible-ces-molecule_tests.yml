name: pulibrary/princeton_ansible
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        role:
        - apache2
        - approvals
        - bibdata
        - bibdata_sqs_poller
        - bind9
        - blacklight_app
        - byzantine
        - cantaloupe
        - capistrano
        - common
        - composer
        - datadog
        - deploy_user
        - dpul
        - drupal10
        - drush
        - ealapps
        - extra_path
        - ezproxy
        - ffmpeg
        - figgy
        - figgy_filewatcher_worker
        - figgy_pubsub_worker
        - fits
        - freetds
        - geaccirc
        - hr_share
        - imagemagick
        - kakadu
        - lae
        - lib_jobs
        - lib_svn
        - libwww
        - lockers_and_study_spaces
        - mailcatcher
        - mediainfo
        - memcached
        - mflux
        - mysql
        - nfsserver
        - nginx
        - nginxplus
        - nodejs
        - oawaiver
        - ojs
        - orangelight
        - passenger
        - php
        - postfix
        - postgresql
        - pul_nomad
        - pulmap
        - rails_app
        - redis
        - researchdata
        - ruby_s
        - samba
        - shared_data
        - sidekiq_worker
        - simple_annotation
        - sneakers_worker
        - special_collections
        - subversion
        - svn
        - timezone
        - tippecanoe
        - towerdeploy
        - video_reserves
        - vips
    steps:
    - name: Checkout branch
      run: |
        git config --global http.postBuffer 1048576000

        for i in 1 2 3 4 5; do git clone https://github.com/pulibrary/princeton_ansible.git . && break || sleep 15; done

        git checkout ${{ github.sha }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: cache python environment
      uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

        pip install -r requirements.txt

        #- name: Setup upterm session

        #uses: lhotari/action-upterm@v1
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: |
        ROLE=${{ matrix.role }} python run_molecule.py
