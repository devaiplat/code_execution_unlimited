name: nextcloud/mail
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  contents: read
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions:
        - 8.1
        - 8.2
        - 8.3
        nextcloud-versions:
        - master
        - stable30
    name: Nextcloud ${{ matrix.nextcloud-versions }} php${{ matrix.php-versions }} unit tests
    steps:
    - name: Set up Nextcloud env
      uses: ChristophWurst/setup-nextcloud@fc0790385c175d97e88a7cb0933490de6e990374
      with:
        nextcloud-version: ${{ matrix.nextcloud-versions }}
        php-version: ${{ matrix.php-versions }}
        php-coverage: xdebug
        patch-php-version-check: ${{ matrix.php-versions == '8.2' }}
        node-version: false
        install: true
    - name: Checkout Mail
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        path: nextcloud/apps/mail
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install dependencies
      working-directory: nextcloud/apps/mail
      run: composer install
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      working-directory: nextcloud/apps/mail
      run: composer run test:unit
      if: ${{ matrix.php-versions == '8.3' }}
      env:
        XDEBUG_MODE: coverage
    - name: Run tests (ces)
      working-directory: nextcloud/apps/mail
      run: composer run test:unit
      if: ${{ matrix.php-versions != '8.3' }}
      env:
        XDEBUG_MODE: off
    - name: Report coverage
      uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457
      if: ${{ always() && matrix.php-versions == '8.3' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./nextcloud/apps/mail/tests/clover.unit.xml
        flags: unittests
        fail_ci_if_error: ${{ !github.event.pull_request.head.repo.fork }}
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions:
        - 8.3
        nextcloud-versions:
        - master
        db:
        - sqlite
        - mysql
        - pgsql
        cache:
        - nocache
        include:
        - php-versions: 8.1
          nextcloud-versions: master
          db: sqlite
          cache: redis
        - php-versions: 8.2
          nextcloud-versions: master
          db: mysql
          cache: redis
        - php-versions: 8.2
          nextcloud-versions: stable30
          db: mysql
          cache: redis
    name: ${{ matrix.nextcloud-versions }} w/ php${{ matrix.php-versions }}-${{ matrix.db }}-${{ matrix.cache }} integration tests
    services:
      mail-service:
        image: ghcr.io/christophwurst/docker-imap-devel:latest
        env:
          MAILNAME: mail.domain.tld
          MAIL_ADDRESS: user@domain.tld
          MAIL_PASS: mypassword
        ports:
        - 25:25
        - 143:143
        - 993:993
        - 4190:4190
      mysql-service:
        image: ghcr.io/nextcloud/continuous-integration-mariadb-10.11:latest
        env:
          MYSQL_ROOT_PASSWORD: my-secret-pw
          MYSQL_DATABASE: nextcloud
          MYSQL_USER: nextcloud
          MYSQL_PASSWORD: nextcloud
        ports:
        - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres-service:
        image: ghcr.io/nextcloud/continuous-integration-postgres-15:latest
        env:
          POSTGRES_USER: nextcloud
          POSTGRES_DB: nextcloud
          POSTGRES_PASSWORD: nextcloud
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: ghcr.io/nextcloud/continuous-integration-redis:latest
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 6379:6379
    steps:
    - name: Set up Nextcloud env
      uses: ChristophWurst/setup-nextcloud@fc0790385c175d97e88a7cb0933490de6e990374
      with:
        nextcloud-version: ${{ matrix.nextcloud-versions }}
        php-version: ${{ matrix.php-versions }}
        php-coverage: xdebug
        patch-php-version-check: ${{ matrix.php-versions == '8.2' }}
        install: true
        database: ${{ matrix.db }}
        node-version: false
    - name: Configure caching
      if: ${{ matrix.cache == 'redis' }}
      run: |
        php -f nextcloud/occ config:system:set memcache.local --value='\OC\Memcache\Redis'

        php -f nextcloud/occ config:system:set memcache.distributed --value='\OC\Memcache\Redis'
    - name: Checkout Mail
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        path: nextcloud/apps/mail
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install dependencies
      working-directory: nextcloud/apps/mail
      run: composer install
    - name: Patch version check for nightly PHP
      if: ${{ matrix.php-versions == '8.2' }}
      run: sed -i 's/max-version="8.1"/max-version="8.2"/' nextcloud/apps/mail/appinfo/info.xml
    - name: Install Mail
      run: php -f nextcloud/occ app:enable -f mail
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Configure Nextcloud for testing (ces) (ces)
      run: |
        php -f nextcloud/occ config:system:set debug --type bool --value true

        php -f nextcloud/occ config:system:set app.mail.verify-tls-peer --type bool --value false
    - name: Enable slow mysql query logs
      if: ${{ matrix.db == 'mysql' }}
      run: |
        echo "SET GLOBAL log_queries_not_using_indexes = 1;" | mysql -h 127.0.0.1 -u root -pmy-secret-pw

        echo "SET GLOBAL slow_query_log=1;" | mysql -h 127.0.0.1 -u root -pmy-secret-pw

        echo "SET GLOBAL log_output = 'table';" | mysql -h 127.0.0.1 -u root -pmy-secret-pw
    - name: Run tests (ces)
      working-directory: nextcloud/apps/mail
      if: ${{ matrix.db == 'mysql' }}
      run: composer run test:integration
      env:
        XDEBUG_MODE: coverage
    - name: Run tests (ces)
      working-directory: nextcloud/apps/mail
      if: ${{ matrix.db != 'mysql' }}
      run: composer run test:integration
      env:
        XDEBUG_MODE: off
    - name: Read slow queries
      if: ${{ always() }}
      run: echo "SELECT * FROM mysql.slow_log WHERE sql_text LIKE '%oc_mail%' AND sql_text NOT LIKE '%information_schema%'" | mysql -h 127.0.0.1 -u root -pmy-secret-pw
    - name: Print debug logs
      if: ${{ always() }}
      run: cat nextcloud/data/horde_*.log
    - name: Report coverage
      uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457
      if: ${{ always() && matrix.db == 'mysql' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./nextcloud/apps/mail/tests/clover.integration.xml
        flags: integrationtests
        fail_ci_if_error: ${{ !github.event.pull_request.head.repo.fork }}
  frontend-unit-test:
    runs-on: ubuntu-latest
    name: Front-end unit tests
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Read package.json node and npm engines version
      uses: skjnldsv/read-package-engines-version-actions@8205673bab74a63eb9b8093402fd9e0e018663a1
      id: versions
      with:
        fallbackNode: ^14
        fallbackNpm: ^7
    - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
      with:
        node-version: ${{ steps.versions.outputs.nodeVersion }}
    - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
      run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"
    - name: npm install
      run: npm install
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: run tests (ces) (ces)
      run: npm run test:unit
    env:
      CI: true
  summary:
    runs-on: ubuntu-latest
    needs:
    - unit-tests
    - integration-tests
    - frontend-unit-test
    if: true
    name: test-summary
    steps:
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Unit test status (ces) (ces)
      run: if ${{ needs.unit-tests.result != 'success' && needs.unit-tests.result != 'skipped' }}; then exit 1; fi
    - name: Integration test status (ces)
      run: if ${{ needs.integration-tests.result != 'success' && needs.integration-tests.result != 'skipped' }}; then exit 1; fi
    - name: Frontend unit test status (ces)
      run: if ${{ needs.frontend-unit-test.result != 'success' && needs.frontend-unit-test.result != 'skipped' }}; then exit 1; fi
