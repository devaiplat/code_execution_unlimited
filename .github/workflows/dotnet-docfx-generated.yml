name: dotnet/docfx
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test:
    runs-on: ${{ matrix.os }}
    environment: ci
    strategy:
      fail-fast: false
      matrix:
        os:
        - windows-latest
        - macos-latest
        - ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}
        repository: ${{ github.event.inputs.repoName }}
        lfs: true
    - uses: ./.github/actions/build
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm run lint
      shell: bash
      working-directory: templates
    - run: npm test
      shell: bash
      working-directory: templates
    - run: dotnet test -c Release -f net8.0 --no-build --collect:"XPlat Code Coverage" --consoleLoggerParameters:"Summary;Verbosity=Minimal"
      id: test-net80
    - run: dotnet test -c Release -f net6.0 --no-build --collect:"XPlat Code Coverage" --consoleLoggerParameters:"Summary;Verbosity=Minimal"
      if: matrix.os == 'ubuntu-latest'
      id: test-net60
    - run: npm i -g @percy/cli
      if: matrix.os == 'ubuntu-latest'
    - run: percy exec -- dotnet test -c Release -f net8.0 --filter Stage=Percy --no-build --collect:"XPlat Code Coverage"
      if: matrix.os == 'ubuntu-latest'
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
    - run: echo "DOTNET_DbgEnableMiniDump=1" >> $GITHUB_ENV
      if: matrix.os == 'ubuntu-latest'
    - run: dotnet run -c Release --no-build -f net8.0 --project src/docfx -- docs/docfx.json
    - run: dotnet run -c Release --no-build -f net8.0 --project src/docfx -- samples/seed/docfx.json --output docs/_site/seed
    - uses: actions/upload-pages-artifact@v3
      if: matrix.os == 'ubuntu-latest'
      with:
        path: docs/_site
    - name: Upload Logs
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: logs-${{ matrix.os }}
        path: >
          msbuild.binlog

          test/**/TestResults/*.trx

          test/**/TestResults/*.html
    - uses: actions/upload-artifact@v4
      if: ${{ failure() && matrix.os == 'ubuntu-latest' }}
      with:
        name: dump
        path: /tmp/coredump*
    - name: Report failed tests (ces)
      if: ${{ failure() && (steps.test-net80.outcome == 'failure' || steps.test-net60.outcome == 'failure') }}
      uses: ./.github/actions/report-failed-tests
  publish-docs:
    if: true
    needs:
    - test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      pages: write
      id-token: write
    steps:
    - id: deployment
      uses: actions/deploy-pages@v4
