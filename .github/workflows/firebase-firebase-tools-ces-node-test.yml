name: firebase/firebase-tools
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  CI: true
  NO_COLOR: true
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    if: true
    strategy:
      matrix:
        node-version:
        - 20
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: npm-shrinkwrap.json
    - run: npm i -g npm@9.5
    - run: npm ci
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm run lint:changed-files
    - run: npm run lint
      working-directory: firebase-vscode
  vscode_unit:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version:
        - 18
        - 20
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: firebase-vscode/package-lock.json
    - run: npm i -g npm@9.5
    - run: npm ci
    - run: npm install
      working-directory: firebase-vscode
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm run test:unit
      working-directory: firebase-vscode
    - uses: codecov/codecov-action@v3
      if: matrix.node-version == '20'
  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 18
        - 20
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: npm-shrinkwrap.json
    - run: npm i -g npm@9.5
    - run: npm ci
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm test -- -- --forbid-only
    - uses: codecov/codecov-action@v3
      if: matrix.node-version == '20'
  integration:
    needs: unit
    if: true
    runs-on: ubuntu-latest
    env:
      FIREBASE_EMULATORS_PATH: ${{ github.workspace }}/emulator-cache
      COMMIT_SHA: ${{ github.sha }}
      CI_JOB_ID: ${{ github.action }}
      FBTOOLS_TARGET_PROJECT: ${{ secrets.FBTOOLS_TARGET_PROJECT }}
      FBTOOLS_CLIENT_INTEGRATION_SITE: ${{ secrets.FBTOOLS_CLIENT_INTEGRATION_SITE }}
      CI_RUN_ID: ${{ github.run_id }}
      CI_RUN_ATTEMPT: ${{ github.run_attempt }}
    strategy:
      fail-fast: false
      matrix:
        node-version:
        - 20
        script:
        - npm run test:client-integration
        - npm run test:emulator
        - npm run test:extensions-emulator
        - npm run test:frameworks
        - npm run test:functions-discover
        - npm run test:hosting
        - npm run test:import-export
        - npm run test:storage-deploy
        - npm run test:storage-emulator-integration
        - npm run test:triggers-end-to-end
        - npm run test:triggers-end-to-end:inspect
        - npm run test:dataconnect-deploy
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: npm-shrinkwrap.json
    - name: Cache firebase emulators
      uses: actions/cache@v3
      with:
        path: ${{ env.FIREBASE_EMULATORS_PATH }}
        key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('emulator-cache/**') }}
      continue-on-error: true
    - run: npm i -g npm@9.5
    - run: npm ci
    - run: echo ${{ secrets.service_account_json_base64 }} | base64 -d > ./scripts/service-account.json
    - run: ${{ matrix.script }}
    - name: Print debug logs
      if: failure()
      run: find . -type f -name "*debug.log" | xargs cat
  integration-windows:
    needs: unit
    if: true
    runs-on: windows-latest
    env:
      FIREBASE_EMULATORS_PATH: ${{ github.workspace }}/emulator-cache
      COMMIT_SHA: ${{ github.sha }}
      CI_JOB_ID: ${{ github.action }}
      FBTOOLS_TARGET_PROJECT: ${{ secrets.FBTOOLS_TARGET_PROJECT }}
      FBTOOLS_CLIENT_INTEGRATION_SITE: ${{ secrets.FBTOOLS_CLIENT_INTEGRATION_SITE }}
      CI_RUN_ID: ${{ github.run_id }}
      CI_RUN_ATTEMPT: ${{ github.run_attempt }}
    strategy:
      fail-fast: false
      matrix:
        node-version:
        - 20
        script:
        - npm run test:hosting
        - npm run test:client-integration
        - npm run test:emulator
        - npm run test:functions-discover
        - npm run test:triggers-end-to-end:inspect
        - npm run test:storage-deploy
        - npm run test:frameworks
    steps:
    - name: Setup Java JDK
      uses: actions/setup-java@v3.3.0
      with:
        java-version: 17
        distribution: temurin
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: npm-shrinkwrap.json
    - name: Cache firebase emulators
      uses: actions/cache@v3
      with:
        path: ${{ env.FIREBASE_EMULATORS_PATH }}
        key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('emulator-cache/**') }}
      continue-on-error: true
    - run: echo ${{ secrets.service_account_json_base64 }} > tmp.txt
    - run: certutil -decode tmp.txt scripts/service-account.json
    - run: npm i -g npm@9.5
    - run: npm ci
    - run: ${{ matrix.script }}
    - name: Print debug logs
      if: failure()
      run: type *debug.log
  check-package-lock:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 20
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i -g npm@9.5
    - run: npm install --package-lock-only --ignore-scripts
    - run: "git diff --exit-code -- npm-shrinkwrap.json || (echo 'Error: npm-shrinkwrap.json is changed during npm install! Please make sure to use npm >= 8 and commit npm-shrinkwrap.json.' && false)"
  check-package-lock-vsce:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 20
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i -g npm@9.5
    - run: (cd firebase-vscode && npm install --package-lock-only --ignore-scripts)
    - run: "git diff --exit-code -- firebase-vscode/package-lock.json || (echo 'Error: firebase-vscode/package-lock.json is changed during npm install! Please make sure to use npm >= 8 and commit firebase-vscode/package-lock.json.' && false)"
  check-json-schema:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 20
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: npm-shrinkwrap.json
    - run: npm install
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm run generate:json-schema
    - run: "git diff --exit-code -- schema/*.json || (echo 'Error: JSON schema is changed! Please run npm run generate:json-schema and commit the results.' && false)"
