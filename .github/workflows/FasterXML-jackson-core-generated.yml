name: FasterXML/jackson-core
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  contents: read
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java_version:
        - 8
        - 11
        - 17
        - 21
        - 22
        os:
        - ubuntu-22.04
        include:
        - java_version: 8
          os: ubuntu-22.04
          release_build: R
        - java_version: 8
          os: windows-latest
          is_windows: W
    env:
      JAVA_OPTS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up JDK
      uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018
      with:
        distribution: temurin
        java-version: ${{ matrix.java_version }}
        cache: maven
        server-id: sonatype-nexus-snapshots
        server-username: CI_DEPLOY_USERNAME
        server-password: CI_DEPLOY_PASSWORD
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build
      run: ./mvnw -B -q -ff -ntp verify
    - name: Extract project Maven version
      id: projectVersion
      if: ${{ !matrix.is_windows }}
      run: echo "version=$(./mvnw org.apache.maven.plugins:maven-help-plugin:3.3.0:evaluate -DforceStdout -Dexpression=project.version -q)" >>$GITHUB_OUTPUT
    - name: Verify Android SDK Compatibility
      if: ${{ matrix.release_build }}
      run: ./mvnw -B -q -ff -ntp -DskipTests animal-sniffer:check
    - name: Deploy snapshot
      if: ${{ github.event_name != 'pull_request' && matrix.release_build && endsWith(steps.projectVersion.outputs.version, '-SNAPSHOT') }}
      env:
        CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
        CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
      run: ./mvnw -B -q -ff -DskipTests -ntp source:jar deploy
    - name: Generate code coverage
      if: ${{ github.event_name != 'pull_request' && matrix.release_build }}
      run: ./mvnw -B -q -ff -ntp test
    - name: Publish code coverage
      if: ${{ github.event_name != 'pull_request' && matrix.release_build }}
      uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
  trigger-dep-builds-v2:
    name: Trigger downstream builds for v2
    needs:
    - build
    if: true
    uses: ./.github/workflows/trigger_dep_builds_v2.yml
    secrets:
      token: ${{ secrets.REPO_DISPATCH }}
  trigger-dep-builds-v3:
    name: Trigger downstream builds for v3
    needs:
    - build
    if: true
    uses: ./.github/workflows/trigger_dep_builds_v3.yml
    secrets:
      token: ${{ secrets.REPO_DISPATCH }}
