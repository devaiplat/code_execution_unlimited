name: FoodieLog/foodie-log-server
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - name: Copy Secret To application module
      env:
        OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
        OCCUPY_SECRET_DIR: ./application/src/main/resources
        OCCUPY_SECRET_TEST_DIR: ./application/src/test/resources
        OCCUPY_SECRET_DIR_FILE_NAME: env.yml
      run: echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME && echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_TEST_DIR/$OCCUPY_SECRET_DIR_FILE_NAME
    - name: Copy Secret To management module
      env:
        OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
        OCCUPY_SECRET_DIR: ./management/src/main/resources
        OCCUPY_SECRET_TEST_DIR: ./management/src/test/resources
        OCCUPY_SECRET_DIR_FILE_NAME: env.yml
      run: echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME && echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_TEST_DIR/$OCCUPY_SECRET_DIR_FILE_NAME
    - name: Copy Firebase Secret To application module
      env:
        FIREBASE_ADMIN: ${{ secrets.FIREBASE_ADMIN }}
        FIREBASE_ADMIN_DIR: ./application/src/main/resources
        FIREBASE_ADMIN_TEST_DIR: ./application/src/test/resources
        FIREBASE_ADMIN_DIR_FILE_NAME: foodie.json
      run: echo $FIREBASE_ADMIN | base64 --decode > $FIREBASE_ADMIN_DIR/$FIREBASE_ADMIN_DIR_FILE_NAME && echo $FIREBASE_ADMIN | base64 --decode > $FIREBASE_ADMIN_TEST_DIR/$FIREBASE_ADMIN_DIR_FILE_NAME
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: >
          ~/.gradle/caches

          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: >
          ${{ runner.os }}-gradle-
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
