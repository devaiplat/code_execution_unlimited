name: element-hq/element-x-android
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx7g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.incremental=false -Dkotlin.daemon.jvm.options=-Xmx2g -XX:+UseG1GC
  CI_GRADLE_ARG_PROPERTIES: --stacktrace -Dsonar.gradle.skipCompile=true
jobs:
  tests:
    name: Runs unit tests
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref == 'refs/heads/main' && format('unit-tests-main-{0}', github.sha) || github.ref == 'refs/heads/develop' && format('unit-tests-develop-{0}', github.sha) || format('unit-tests-{0}', github.ref) }}
      cancel-in-progress: true
    steps:
    - name: "\U0001F4BD Increase swapfile size"
      run: |
        sudo swapoff -a

        sudo fallocate -l 8G /mnt/swapfile

        sudo chmod 600 /mnt/swapfile

        sudo mkswap /mnt/swapfile

        sudo swapon /mnt/swapfile

        sudo swapon --show
    - name: ⏬ Checkout with LFS
      uses: nschloe/action-cached-lfs-checkout@v1.2.2
      with:
        ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
    - name: Add SSH private keys for submodule repositories
      uses: webfactory/ssh-agent@v0.9.0
      if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'element-hq/element-x-android' }}
      with:
        ssh-private-key: ${{ secrets.ELEMENT_ENTERPRISE_DEPLOY_KEY }}
    - name: Clone submodules
      if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'element-hq/element-x-android' }}
      run: git submodule update --init --recursive
    - name: ☕️ Use JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - name: Configure gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/develop' }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: ⚙️ Run unit tests for debug variant (ces) (ces)
      run: ./gradlew testDebugUnitTest $CI_GRADLE_ARG_PROPERTIES
    - name: "\U0001F4F8 Run screenshot tests (ces)"
      run: ./gradlew verifyPaparazziDebug $CI_GRADLE_ARG_PROPERTIES
    - name: "\U0001F4C8Generate kover report and verify coverage"
      run: ./gradlew :app:koverXmlReportGplayDebug :app:koverHtmlReportGplayDebug :app:koverVerifyAll $CI_GRADLE_ARG_PROPERTIES
    - name: "\U0001F6AB Upload kover failed coverage reports"
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: kover-error-report
        path: >
          app/build/reports/kover/verifyGplayDebug.err
    - name: ✅ Upload kover report (disabled)
      if: always()
      run: echo "This is now done only once a day, see nightlyReports.yml"
    - name: "\U0001F6AB Upload test results on error (ces)"
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: tests-and-screenshot-tests-results
        path: >
          **/build/paparazzi/failures/

          **/build/reports/tests/*UnitTest/
    - name: ☂️ Upload coverage reports to codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        files: app/build/reports/kover/reportGplayDebug.xml
        verbose: true
