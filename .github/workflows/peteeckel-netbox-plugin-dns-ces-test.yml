name: peteeckel/netbox-plugin-dns
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test-netbox:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - 3.10
        - 3.11
        - 3.12
    services:
      redis:
        image: redis
        ports:
        - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_USER: netbox
          POSTGRES_PASSWORD: netbox
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432:5432
    steps:
    - name: Checkout code
      uses: actions/checkout@main
      with:
        path: netbox-plugin-dns
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Checkout NetBox
      uses: actions/checkout@main
      with:
        repository: ${{ github.event.inputs.repoName }}
        path: netbox
        ref: ${{ github.event.inputs.ref }}
    - name: Install NetBox DNS
      working-directory: netbox-plugin-dns
      run: |
        # include tests directory for test

        sed -i 's/exclude/#exclude/g' pyproject.toml

        pip install .
    - name: Install dependencies and set up configuration
      working-directory: netbox
      run: |
        ln -s $(pwd)/../netbox-plugin-dns/media/configuration.testing.py netbox/netbox/configuration.py


        python -m pip install --upgrade pip

        python -m pip install tblib

        pip install -r requirements.txt -U
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      working-directory: netbox
      run: |
        python netbox/manage.py test netbox_dns.tests --parallel -v2
