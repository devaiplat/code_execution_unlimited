name: Molara-Lab/Molara
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  contents: read
jobs:
  test:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        version:
        - python: 3.9
          resolution: lowest-direct
          extra: tests,crystal,compchem
        - python: 3.12
          resolution: highest
          extra: tests,strict,crystal,compchem
        include:
        - os: macos-latest
          version:
            python: 3.10
            resolution: highest
            extra: tests,strict
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python ${{ matrix.version.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.version.python }}
        cache: pip
    - name: Install uv
      run: |
        pip install uv
    - name: Install dependencies
      run: |
        uv pip install -e .[${{ matrix.version.extra }}] --resolution=${{ matrix.version.resolution }} --system
    - if: runner.os == 'Linux'
      run: |
        sudo apt update && sudo apt install -y libegl1-mesa-dev

        sudo apt install -y '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev

        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: pytest (ces) (ces)
      run: |
        pytest --cov=src --cov-report=xml tests
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.5.0
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
