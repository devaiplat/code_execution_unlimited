name: dependabot/dependabot-core
env:
  UPDATER_IMAGE: ghcr.io/dependabot/dependabot-updater-
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  date-version:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.DATE_BASED_VERSION }}
    steps:
    - id: date
      name: Set date based version
      run: |
        export DATE_BASED_VERSION=v2.0.$(date +%Y%m%d%H%M%S)

        echo "DATE_BASED_VERSION=$DATE_BASED_VERSION" >> $GITHUB_OUTPUT
  push-updater-image:
    name: Deploy
    runs-on: ubuntu-latest
    needs: date-version
    permissions:
      contents: read
      id-token: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        suite:
        - name: bundler
          ecosystem: bundler
        - name: cargo
          ecosystem: cargo
        - name: composer
          ecosystem: composer
        - name: docker
          ecosystem: docker
        - name: elm
          ecosystem: elm
        - name: git_submodules
          ecosystem: gitsubmodule
        - name: github_actions
          ecosystem: github-actions
        - name: go_modules
          ecosystem: gomod
        - name: gradle
          ecosystem: gradle
        - name: hex
          ecosystem: mix
        - name: maven
          ecosystem: maven
        - name: npm_and_yarn
          ecosystem: npm
        - name: nuget
          ecosystem: nuget
        - name: pub
          ecosystem: pub
        - name: python
          ecosystem: pip
        - name: swift
          ecosystem: swift
        - name: devcontainers
          ecosystem: devcontainers
        - name: terraform
          ecosystem: terraform
    env:
      COMMIT_SHA: ${{ github.sha }}
      NAME: ${{ matrix.suite.name }}
      ECOSYSTEM: ${{ matrix.suite.ecosystem }}
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
      with:
        submodules: recursive
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
    - name: Build the dependabot-updater-<ecosystem> image
      run: script/build ${NAME}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Tag the images with the SHA, `latest`, and the date version (ces) (ces)
      run: |
        docker tag "${UPDATER_IMAGE}${ECOSYSTEM}" "${UPDATER_IMAGE}${ECOSYSTEM}:$COMMIT_SHA"

        docker tag "${UPDATER_IMAGE}${ECOSYSTEM}" "${UPDATER_IMAGE}${ECOSYSTEM}:latest"

        docker tag "${UPDATER_IMAGE}${ECOSYSTEM}" "${UPDATER_IMAGE}${ECOSYSTEM}:${{ needs.date-version.outputs.date }}"
    - name: Log in to GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push the images to GHCR
      run: |
        docker push --all-tags "${UPDATER_IMAGE}${ECOSYSTEM}"

        # All tags should resolve to the same digest so we only need to look up one of them

        cosign sign --yes $(cosign triangulate --type=digest "${UPDATER_IMAGE}${ECOSYSTEM}:latest")
    - name: Set summary
      run: |
        echo "updater uploaded with tag \`$COMMIT_SHA\`" >> $GITHUB_STEP_SUMMARY

        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

        echo "${UPDATER_IMAGE}${ECOSYSTEM}:$COMMIT_SHA" >> $GITHUB_STEP_SUMMARY

        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
