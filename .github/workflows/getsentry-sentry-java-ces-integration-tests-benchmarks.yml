name: getsentry/sentry-java
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Benchmarks
    runs-on: ubuntu-latest
    env:
      SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: 'Set up Java: 17'
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@0d30c9111cf47a838eb69c06d13f3f51ab2ed76f
      with:
        gradle-home-cache-cleanup: true
    - name: Make assembleBenchmarks
      if: env.SAUCE_USERNAME != null
      run: make assembleBenchmarks
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run All Tests in SauceLab (ces) (ces)
      uses: saucelabs/saucectl-run-action@39e4f0666ca8ecb4b60847213c6e0fbd6a0c2bd8
      if: github.event_name != 'pull_request' && env.SAUCE_USERNAME != null
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        sauce-username: ${{ secrets.SAUCE_USERNAME }}
        sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
        config-file: .sauce/sentry-uitest-android-benchmark.yml
    - name: Run one test in SauceLab (ces)
      uses: saucelabs/saucectl-run-action@39e4f0666ca8ecb4b60847213c6e0fbd6a0c2bd8
      if: github.event_name == 'pull_request' && env.SAUCE_USERNAME != null
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        sauce-username: ${{ secrets.SAUCE_USERNAME }}
        sauce-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
        config-file: .sauce/sentry-uitest-android-benchmark-lite.yml
  app-metrics:
    runs-on: ubuntu-latest
    env:
      SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: 'Set up Java: 17'
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@0d30c9111cf47a838eb69c06d13f3f51ab2ed76f
      with:
        gradle-home-cache-cleanup: true
    - uses: actions/cache@v4
      id: app-plain-cache
      with:
        path: sentry-android-integration-tests/test-app-plain/build/outputs/apk/release/test-app-plain-release.apk
        key: ${{ github.workflow }}-${{ github.job }}-appplain-${{ hashFiles('sentry-android-integration-tests/test-app-plain/**') }}
    - name: Build Android app plain
      if: steps.app-plain-cache.outputs['cache-hit'] != 'true'
      run: ./gradlew :sentry-android-integration-tests:test-app-plain:assembleRelease
    - name: Build Android app with Sentry
      run: ./gradlew :sentry-android-integration-tests:test-app-sentry:assembleRelease
    - name: Collect app metrics
      uses: getsentry/action-app-sdk-overhead-metrics@v1
      with:
        config: sentry-android-integration-tests/metrics-test.yml
        sauce-user: ${{ secrets.SAUCE_USERNAME }}
        sauce-key: ${{ secrets.SAUCE_ACCESS_KEY }}
      if: env.SAUCE_USERNAME != null
