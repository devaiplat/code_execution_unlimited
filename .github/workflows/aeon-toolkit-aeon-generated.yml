name: aeon-toolkit/aeon
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
jobs:
  check-manifest:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: 3.10
    - name: Run check-manifest
      uses: pre-commit/action@v3.0.1
      with:
        extra_args: check-manifest --hook-stage manual
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: 3.10
    - name: Run pre-commit
      uses: pre-commit/action@v3.0.1
      with:
        extra_args: --all-files
  run-notebook-examples:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: 3.10
    - name: Use numba cache to set env variables but not restore cache
      uses: ./.github/actions/numba_cache
      with:
        cache_name: run-notebook-examples
        runner_os: ${{ runner.os }}
        python_version: 3.10
        restore_cache: false
    - name: Install dependencies
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: python -m pip install .[all_extras,binder,dev]
    - name: Run example notebooks
      run: build_tools/run_examples.sh false
      shell: bash
    - name: Save new cache
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/.numba_cache
        key: numba-run-notebook-examples-${{ runner.os }}-3.10-${{ env.CURRENT_DATE }}
  test-no-soft-deps:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: 3.10
    - name: Use numba cache to set env variables but not restore cache
      uses: ./.github/actions/numba_cache
      with:
        cache_name: test-no-soft-deps
        runner_os: ${{ runner.os }}
        python_version: 3.10
        restore_cache: false
    - name: Install aeon and dependencies
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: python -m pip install .[dev]
    - name: Show dependencies
      run: python -m pip list
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: python -m pytest -n logical
    - name: Save new cache
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/.numba_cache
        key: numba-test-no-soft-deps-${{ runner.os }}-3.10-${{ env.CURRENT_DATE }}
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-22.04
        - macOS-14
        - windows-2022
        python-version:
        - 3.9
        - 3.10
        - 3.11
        - 3.12
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Use numba cache to set env variables but not restore cache
      uses: ./.github/actions/numba_cache
      with:
        cache_name: pytest
        runner_os: ${{ runner.os }}
        python_version: ${{ matrix.python-version }}
        restore_cache: false
    - name: Install aeon and dependencies
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: python -m pip install .[all_extras,dev]
    - name: Show dependencies
      run: python -m pip list
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: python -m pytest -n logical
    - name: Save new cache
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/.numba_cache
        key: numba-pytest-${{ runner.os }}-${{ matrix.python-version}}-${{ env.CURRENT_DATE }}
  codecov:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: 3.10
    - name: Disable Numba JIT
      run: echo "NUMBA_DISABLE_JIT=1" >> $GITHUB_ENV
    - name: Install aeon and dependencies
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: python -m pip install .[all_extras,unstable_extras,dev]
    - name: Show dependencies
      run: python -m pip list
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      run: python -m pytest -n logical --cov=aeon --cov-report=xml --timeout 1800
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
