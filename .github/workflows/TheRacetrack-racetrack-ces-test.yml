name: TheRacetrack/racetrack
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test-unit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.22'
    - name: Install dependencies
      run: make setup-test-unit
    - run: . venv/bin/activate && make test-unit
  test-e2e-compose:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Install dependencies
      run: make setup-test-e2e
    - name: Build and Create Docker containers
      run: . venv/bin/activate && make compose-up
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run End-to-end tests (ces) (ces)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: . venv/bin/activate && make compose-test-e2e
    - name: Collect docker logs on failure
      if: failure()
      uses: jwalton/gh-docker-logs@v2.2.0
      with:
        images: ghcr.io/theracetrack/racetrack/lifecycle,ghcr.io/theracetrack/racetrack/image-builder,ghcr.io/theracetrack/racetrack/dashboard,ghcr.io/theracetrack/racetrack/pub,postgres,127.0.0.1:5000/racetrack/job-entrypoint/adder
        tail: 1000
