name: rabbitmq/rabbitmq-java-client
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Checkout tls-gen
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        path: ./tls-gen
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 21
        cache: maven
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    - name: Start cluster
      run: ci/start-cluster.sh
    - name: Get dependencies
      run: make deps
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test with NIO (ces) (ces)
      run: |
        ./mvnw verify -P use-nio -Drabbitmqctl.bin=DOCKER:rabbitmq \
          -Dtest-broker.A.nodename=rabbit@$(hostname) -Dtest-broker.B.nodename=hare@$(hostname) \
          -Dmaven.javadoc.skip=true \
          -Dtest-client-cert.password= -Dtest-tls-certs.dir=rabbitmq-configuration/tls \
          --no-transfer-progress
    - name: Test with blocking IO (ces)
      run: |
        ./mvnw verify -Drabbitmqctl.bin=DOCKER:rabbitmq \

        -Dtest-broker.A.nodename=rabbit@$(hostname) -Dtest-broker.B.nodename=hare@$(hostname) \

        -Dmaven.javadoc.skip=true \

        -Dtest-client-cert.password= -Dtest-tls-certs.dir=rabbitmq-configuration/tls \

        --no-transfer-progress
    - name: Stop broker A
      run: docker stop rabbitmq && docker rm rabbitmq
    - name: Stop broker B
      run: docker stop hare && docker rm hare
    - name: Publish snapshot
      if: ${{ github.event_name != 'pull_request' }}
      run: ./mvnw clean deploy -Psnapshots -DskipITs -DskipTests --no-transfer-progress
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
