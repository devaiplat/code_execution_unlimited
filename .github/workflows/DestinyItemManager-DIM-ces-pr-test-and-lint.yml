name: DestinyItemManager/DIM
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: pnpm/action-setup@v4
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: pnpm
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Cache Manifest
      id: destiny-manifest
      uses: actions/cache@v4
      with:
        path: manifest-cache
        key: destiny-manifest-${{ github.run_id }}
        restore-keys: >
          destiny-manifest
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Jest Test (ces) (ces)
      run: pnpm test
      env:
        CLEAN_MANIFEST_CACHE: true
    - uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: test-results
        path: junit.xml
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: pnpm/action-setup@v4
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: pnpm
    - name: Cache ESLint
      uses: actions/cache@v4
      env:
        cache-name: cache-eslint
      with:
        path: ~/.eslintcache
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('.eslintrc') }}
        restore-keys: >
          ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('.eslintrc') }}

          ${{ runner.os }}-${{ env.cache-name }}-
    - name: Install
      run: pnpm install --frozen-lockfile --prefer-offline
    - name: Prettier
      run: pnpm lint:prettier
    - name: StyleLint
      run: pnpm lint:stylelint
    - name: ESLint (Forked)
      if: ${{ github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]' }}
      run: pnpm lintcached
    - name: Save ESLint Report JSON (Non-Forked)
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
      run: pnpm lint-report:cached
      continue-on-error: true
    - name: Annotate ESLint Results
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
      uses: ataylorme/eslint-annotate-action@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        report-json: eslint.results.json
        fail-on-warning: true
