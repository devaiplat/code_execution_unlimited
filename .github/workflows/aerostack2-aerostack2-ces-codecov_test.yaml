name: aerostack2/aerostack2
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    container:
      image: osrf/ros:humble-desktop
    strategy:
      matrix:
        os:
        - ubuntu-22.04
      fail-fast: false
    steps:
    - name: Install deps
      run: sudo apt-get update && sudo apt-get install -y lcov python3-vcstool python3-colcon-lcov-result python3-colcon-coveragepy-result python3-rosdep python3-pip python3-colcon-common-extensions
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: build and test (ces) (ces)
      uses: ros-tooling/action-ros-ci@v0.2
      with:
        package-name: >
          aerostack2 as2_alphanumeric_viewer as2_behavior as2_behaviors_motion as2_behaviors_path_planning as2_behaviors_perception as2_behaviors_platform as2_behaviors_trajectory_generation as2_behavior_tree as2_cli as2_core as2_external_object_to_tf as2_gazebo_assets as2_geozones as2_keyboard_teleoperation as2_map_server as2_motion_controller as2_motion_reference_handlers as2_msgs as2_platform_gazebo as2_platform_multirotor_simulator as2_python_api as2_realsense_interface as2_rviz_plugins as2_state_estimator as2_usb_camera_interface as2_visualization
        target-ros2-distro: humble
        colcon-defaults: >
          { 
            "build": {
              "mixin": ["coverage-gcc"]
            },
            "test": {
              "parallel-workers" : 1
            }
          }
        colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
    - name: Codecov
      uses: codecov/codecov-action@v1.2.1
      with:
        file: ros_ws/lcov/total_coverage.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
