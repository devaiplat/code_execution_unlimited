name: mage-ai/mage-ai
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  ENV: test_mage
jobs:
  check-code-quality:
    runs-on: ubuntu-latest
    name: Check Code Quality
    steps:
    - name: Check out source repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
        cache: poetry
    - name: Install Python dev dependencies
      run: |
        poetry install --no-interaction --only dev

        poetry run pre-commit install
    - id: changed-files
      uses: tj-actions/changed-files@v36
      with:
        files_ignore: >
          requirements.txt
    - name: Run pre-commit hooks
      run: poetry run pre-commit run --show-diff-on-failure --files ${{ steps.changed-files.outputs.all_changed_files }}
  test_backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - 3.8
        - 3.9
        - 3.10
        - 3.11
        - 3.12
    needs: check-code-quality
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install freetds-dev

        python -m pip install --upgrade pip

        pip install "git+https://github.com/mage-ai/sqlglot#egg=sqlglot"

        pip install -r requirements.txt

        pip install mage_integrations/

        pip install "git+https://github.com/mage-ai/singer-python.git#egg=singer-python"
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run unit tests (ces) (ces)
      run: |
        python3 -m unittest discover -s mage_ai --failfast
      env:
        OPENAI_API_KEY: abcdefg
    - name: Run mage integrations unit tests (ces)
      run: |
        cd mage_integrations && python3 -m unittest discover mage_integrations.tests
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 18.18.0
      if: matrix.python-version == '3.10'
    - name: Create Mage test project (ces)
      run: |
        python mage_ai/cli/main.py init test_project
      env:
        PYTHONPATH: ${{ env.pythonLocation }}:.
      if: matrix.python-version == '3.10'
    - name: Build frontend, start server, and run Playwright tests (ces)
      run: |
        yarn install &&

        yarn export_prod &&

        yarn playwright install chromium &&

        yarn playwright test -c playwright.config.ci.ts
      working-directory: mage_ai/frontend/
      env:
        PYTHONPATH: ${{ env.pythonLocation }}:.
      if: matrix.python-version == '3.10'
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: mage_ai/frontend/playwright-report/
        retention-days: 3
  test_web_server_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version:
        - 3.10
    needs: check-code-quality
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 20.15.1
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Create Mage test project (ces) (ces)
      run: |
        Start-Process -Wait -FilePath "C:\Program Files\Git\unins000.exe" -ArgumentList "/SILENT"

        python -m venv venv3

        venv3/Scripts/Activate.ps1

        $env:PYTHONPATH = "${env:PYTHONPATH};${pwd}"

        python -m pip install -r requirements.txt

        python mage_ai/cli/main.py init test_project
    - name: Build frontend, start server, and run Playwright tests (ces)
      run: |
        yarn install &&

        yarn export_prod &&

        yarn playwright install chromium &&

        yarn playwright test -c playwright-windows.config.ci.ts
      working-directory: mage_ai/frontend/
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: mage_ai/frontend/playwright-report/
        retention-days: 3
