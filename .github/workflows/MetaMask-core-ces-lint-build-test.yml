name: MetaMask/core
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 18.x
        - 20.x
    outputs:
      child-workspace-package-names: ${{ steps.workspace-package-names.outputs.child-workspace-package-names }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Yarn
      run: corepack enable
    - name: Restore Yarn cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    - run: yarn --immutable
    - name: Fetch workspace package names
      id: workspace-package-names
      run: |
        echo "child-workspace-package-names=$(yarn workspaces list --no-private --json | jq --slurp --raw-output 'map(.name) | @json')" >> "$GITHUB_OUTPUT"
      shell: bash
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version:
        - 20.x
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Yarn
      run: corepack enable
    - name: Restore Yarn cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    - run: yarn --immutable
    - run: yarn lint
    - name: Require clean working directory
      shell: bash
      run: |
        if ! git diff --exit-code; then
          echo "Working tree dirty at end of job"
          exit 1
        fi
  validate-changelog:
    name: Validate changelog
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version:
        - 20.x
        package-name: ${{ fromJson(needs.prepare.outputs.child-workspace-package-names) }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Yarn
      run: corepack enable
    - name: Restore Yarn cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    - run: yarn --immutable
    - run: yarn workspace ${{ matrix.package-name }} changelog:validate
    - name: Require clean working directory
      shell: bash
      run: |
        if ! git diff --exit-code; then
          echo "Working tree dirty at end of job"
          exit 1
        fi
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version:
        - 20.x
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Yarn
      run: corepack enable
    - name: Restore Yarn cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    - run: yarn --immutable
    - run: yarn build
    - name: Require clean working directory
      shell: bash
      run: |
        if ! git diff --exit-code; then
          echo "Working tree dirty at end of job"
          exit 1
        fi
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        node-version:
        - 18.x
        - 20.x
        package-name: ${{ fromJson(needs.prepare.outputs.child-workspace-package-names) }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Yarn
      run: corepack enable
    - name: Restore Yarn cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    - run: yarn --immutable
    - run: yarn test:scripts
    - run: yarn workspace ${{ matrix.package-name }} run test
    - name: Require clean working directory
      shell: bash
      run: |
        if ! git diff --exit-code; then
          echo "Working tree dirty at end of job"
          exit 1
        fi
