name: lambdaclass/cairo-vm
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  install:
    name: Install on ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-22.04
        - macos-12
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Cargo cache
      uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: true
        cache-on-failure: true
        cache-directories: ./cairo/target/
    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        cache: pip
    - name: Install dependencies and compile project
      run: |
        source install.sh

        make check
  install_debian:
    name: Install on debian-11
    runs-on: ubuntu-22.04
    container:
      image: debian:11
    defaults:
      run:
        shell: bash {0}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: >
          ~/.cargo/

          ./target/

          ./cairo/target/
        key: ${{ runner.os }}-install-${{ github.sha }}
        restore-keys: ${{ runner.os }}-install-
    - name: Enable pip cache
      run: |
        mkdir -p ~/.cache/pip

        chown -v -R $USER ~/.cache

        chmod -v -R 770 ~/.cache

        ls -al ~/

        ls -al ~/.cache
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: >
          ~/.cache/pip/wheels
        key: ${{ runner.os }}-python-install-${{ github.sha }}
        restore-keys: ${{ runner.os }}-python-install-
    - name: Install dependencies and compile project
      run: |
        source install.sh

        make check
