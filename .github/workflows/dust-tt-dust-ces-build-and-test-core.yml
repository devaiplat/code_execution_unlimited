name: dust-tt/dust
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Install minimal stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: checkout
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Redis
      uses: zhulik/redis-action@1.1.0
      with:
        redis version: 7.2.5
    - name: Install Postgres
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: 14.13
        postgresql db: oauth
        postgresql user: test
        postgresql password: test
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: core
    - name: Lint
      working-directory: core
      run: cargo fmt --all -- --check
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test (ces) (ces)
      working-directory: core
      run: cargo test --all
      env:
        DISABLE_API_KEY_CHECK: true
        OAUTH_DATABASE_URI: postgres://test:test@localhost:5432/oauth
        REDIS_URI: redis://localhost:6379
        OAUTH_ENCRYPTION_KEY: ${{ secrets.TEST_OAUTH_ENCRYPTION_KEY }}
