name: threeal/setup-yarn-action
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test-package:
    name: Test Package
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.0
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node.js
      uses: actions/setup-node@v4.0.4
      with:
        node-version-file: .nvmrc
    - name: Setup Yarn
      uses: threeal/setup-yarn-action@v2.0.0
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Test Package (ces) (ces)
      run: yarn test
  test-action:
    name: Test Action
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-22.04
        - macos-14
        - windows-2022
    steps:
    - name: Checkout Package
      uses: actions/checkout@v4.2.0
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Checkout Action
      uses: actions/checkout@v4.2.0
      with:
        path: setup-yarn-action
        sparse-checkout: >
          action.yml

          dist
        sparse-checkout-cone-mode: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Yarn
      uses: ./setup-yarn-action
    - name: Build Package
      run: yarn pack
  test-action-with-specific-version:
    name: Test Action With Specific Version
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-22.04
        - macos-14
        - windows-2022
    steps:
    - name: Checkout Package
      uses: actions/checkout@v4.2.0
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Alter Package
      shell: bash
      run: jq 'del(.packageManager)' package.json > package.json.tmp && mv package.json.tmp package.json
    - name: Checkout Action
      uses: actions/checkout@v4.2.0
      with:
        path: setup-yarn-action
        sparse-checkout: >
          action.yml

          dist
        sparse-checkout-cone-mode: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Yarn
      uses: ./setup-yarn-action
      with:
        version: 4.0.2
    - name: Check Version
      shell: bash
      run: test $(yarn --version) == 4.0.2
    - name: Build Package
      run: yarn pack
  test-action-without-cache:
    name: Test Action Without Cache
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-22.04
        - macos-14
        - windows-2022
    steps:
    - name: Checkout Package
      uses: actions/checkout@v4.2.0
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Checkout Action
      uses: actions/checkout@v4.2.0
      with:
        path: setup-yarn-action
        sparse-checkout: >
          action.yml

          dist
        sparse-checkout-cone-mode: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Yarn
      uses: ./setup-yarn-action
      with:
        cache: false
    - name: Build Package
      run: yarn pack
  test-action-with-yarn-local-cache:
    name: Test Action With Yarn Local Cache
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Package
      uses: actions/checkout@v4.2.0
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Checkout Action
      uses: actions/checkout@v4.2.0
      with:
        path: setup-yarn-action
        sparse-checkout: >
          action.yml

          dist
        sparse-checkout-cone-mode: false
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Disable Yarn Global Cache
      run: |
        corepack enable yarn

        yarn config set enableGlobalCache false
    - name: Setup Yarn
      uses: ./setup-yarn-action
    - name: Build Package
      run: yarn pack
