name: chanzuckerberg/cellxgene-census
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
env:
  CELLXGENE_CENSUS_USERAGENT: CZI-test
jobs:
  py_unit_tests:
    runs-on: single-cell-1tb-runner
    timeout-minutes: 1440
    strategy:
      fail-fast: false
    steps:
    - name: log system state
      run: |
        free

        echo ---------

        df -kh

        echo ---------

        lscpu
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: pip
        cache-dependency-path: >
          api/**/pyproject.toml

          api/**/requirements*.txt
    - name: install python dependencies (including experimental)
      run: |
        python -m pip install -U pip setuptools setuptools_scm wheel

        pip install --use-pep517 accumulation-tree # Geneformer dependency needs --use-pep517 for Cython

        pip install -r ./api/python/cellxgene_census/scripts/requirements-dev.txt

        pip install './api/python/cellxgene_census/[experimental]'
    - name: install tiledbsoma version override
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.tiledbsoma_python_dependency != ''
      run: |
        pip uninstall tiledbsoma -y

        pip install '${{ github.event.inputs.tiledbsoma_python_dependency }}'
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: pytest (--expensive --experimental) (ces) (ces)
      run: |
        echo '--------- tiledbsoma.show_package_version():'

        python -c 'import tiledbsoma; tiledbsoma.show_package_versions()'

        echo '--------- PIP package versions:'

        pip freeze


        PYTHONPATH=. pytest -v --durations=0 -rP --experimental --expensive ./api/python/cellxgene_census/tests/
  r_unit_tests:
    runs-on: single-cell-1tb-runner
    timeout-minutes: 1440
    strategy:
      fail-fast: false
    steps:
    - name: log system state
      run: |
        free

        echo ---------

        df -kh

        echo ---------

        lscpu
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: r-lib/actions/setup-r@v2
      with:
        extra-repositories: https://tiledb-inc.r-universe.dev, https://cloud.r-project.org, https://chanzuckerberg.r-universe.dev
    - uses: r-lib/actions/setup-r-dependencies@v2
      with:
        working-directory: ./api/r/cellxgene.census
        extra-packages: any::rcmdcheck, any::remotes
        cache: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: testthat (ces) (ces)
      run: |
        Rscript -e 'remotes::install_local("./api/r/cellxgene.census")'

        Rscript -e 'library("tiledbsoma"); tiledbsoma::show_package_versions()'

        Rscript -e 'library("testthat"); library("cellxgene.census"); test_dir("./api/r/cellxgene.census/tests/")'

        cd ./api/r/cellxgene.census/tests/testthat/; Rscript ./acceptance-tests-run-script.R
