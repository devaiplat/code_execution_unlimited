name: Qiskit/documentation
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  execute:
    name: Execute notebooks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Exit early on forks
      if: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
      shell: python
      run: |
        raise SystemExit(
          "We can't run this test on pull requests from forks."
          "\n\n"
          "If you have write access to Qiskit/documentation, push to a new "
          "branch there and make your pull request from that branch instead."
          "\n\n"
          "If you don't have write access, you must test out the notebook "
          "locally using the instructions in "
          "https://github.com/Qiskit/documentation#execute-notebooks."
          "When this PR is approved, a maintainer will merge it to a new "
          "branch in Qiskit/documentation, then make a PR from that branch "
          "into main so it can pass CI."
        )
    - name: Get all changed files
      id: all-changed-files
      uses: tj-actions/changed-files@af2816c65436325c50621100d67f6e853cd1b0f1
      with:
        files: docs/**/*.ipynb
        separator: >2

    - name: Get changed config files
      id: changed-config
      uses: tj-actions/changed-files@af2816c65436325c50621100d67f6e853cd1b0f1
      with:
        files: scripts/nb-tester/**/*
    - name: Check for notebooks that require Linux
      id: linux-changed-files
      uses: tj-actions/changed-files@af2816c65436325c50621100d67f6e853cd1b0f1
      with:
        files: >
          docs/guides/visualize-circuits.ipynb

          docs/guides/custom-backend.ipynb

          docs/guides/transpiler-stages.ipynb

          docs/guides/represent-quantum-computers.ipynb

          docs/guides/common-parameters.ipynb
    - name: Setup environment
      uses: ./.github/actions/set-up-notebook-testing
      with:
        install-linux-deps: ${{ steps.linux-changed-files.outputs.any_changed == 'true' || steps.changed-config.outputs.any_changed == 'true' }}
        ibm-quantum-token: ${{ secrets.IBM_QUANTUM_TEST_TOKEN }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Check lint
      shell: python
      run: |
        import subprocess, sys

        files = """${{ steps.all-changed-files.outputs.all_changed_files }}"""

        args = ["tox", "-e", "lint", "--"] + files.split("\n")

        try:
          subprocess.run(args, check=True)
        except:
          print(
            "To fix, install `tox` and run `tox -e fix` or download the fixed "
            "notebook from this run by clicking \"Summary\" on the upper-left "
            "of this page, and downloading the \"Executed notebooks\" artifact."
            "\n\n"
            "For more information, see https://github.com/Qiskit/documentation/blob/main/README.md#lint-notebooks"
          )
          sys.exit(1)
    - name: Execute notebooks
      if: '!cancelled()'
      shell: python
      run: |
        import subprocess

        changed_notebooks = """${{ steps.all-changed-files.outputs.all_changed_files }}"""

        changed_config = """${{ steps.changed-config.outputs.all_changed_files }}"""

        args = ["tox", "--", "--write"]

        if changed_notebooks and not changed_config:
            args.extend(changed_notebooks.split("\n"))
        subprocess.run(args, check=True)
    - name: Detect changed notebooks
      id: changed-notebooks
      if: '!cancelled()'
      run: |
        echo "CHANGED_NOTEBOOKS<<EOF" >> $GITHUB_OUTPUT

        git diff --name-only >> $GITHUB_OUTPUT

        echo "EOF" >> $GITHUB_OUTPUT
    - name: Upload executed notebooks
      if: '!cancelled()'
      uses: actions/upload-artifact@v4
      with:
        name: Executed notebooks
        path: ${{ steps.changed-notebooks.outputs.CHANGED_NOTEBOOKS || 'no-changes' }}
