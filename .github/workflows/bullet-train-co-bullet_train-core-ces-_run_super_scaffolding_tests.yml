name: bullet-train-co/bullet_train-core
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  test:
    name: "\U0001F3D7️"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ci_runners:
        - TestSite, Project
        - Project::Step, Insight
        - Personality::Disposition, Personality::Observation
        - TestFile, PartialTest
        - Webhook
    services:
      postgres:
        image: postgres:11-alpine
        ports:
        - 5432:5432
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
        - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://rails:password@localhost:5432/rails_test
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
    steps:
    - name: Checkout Core Repo
      uses: actions/checkout@v4
      with:
        path: tmp/core
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Checkout Starter Repo
      uses: bullet-train-co/checkout-repo-with-matching-branch@v1
      with:
        target_dir: tmp/starter
        repository: bullet-train-co/bullet_train
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        working-directory: tmp/starter
        bundler-cache: true
    - name: Enable corepack
      run: corepack enable
    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version-file: tmp/starter/.nvmrc
        cache: yarn
        cache-dependency-path: tmp/starter/yarn.lock
    - name: Link Core Repo
      uses: bullet-train-co/link-core-gems@v1
      with:
        application_dir: tmp/starter
        core_dir: tmp/core
    - name: Allow adding of spring
      run: bundle config unset deployment
      working-directory: tmp/starter
    - name: Add spring
      run: bundle add spring
      working-directory: tmp/starter
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Setup Super Scaffolding System Test (ces) (ces)
      run: bundle exec test/bin/setup-super-scaffolding-system-test
      working-directory: tmp/starter
      env:
        CIRCLE_NODE_INDEX: ${{ strategy.job-index }}
    - name: Run Super Scaffolding Test (ces)
      run: bin/rails test test/system/super_scaffolding/
      working-directory: tmp/starter
    - name: Run Super Scaffolding Webhook Test (ces)
      run: bin/rails test test/controllers/webhooks/incoming/some_provider_webhooks_controller_test.rb
      if: ${{ strategy.job-index == 5 }}
    - name: Test Summary (ces)
      uses: test-summary/action@v2
      with:
        paths: tmp/starter/test/reports/**/TEST-*.xml
      if: always()
