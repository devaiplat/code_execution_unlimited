name: grafana/agent
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  regenerate-docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Regenerate docs
      run: |
        docker run --rm \
          -v "$(pwd)/operations/helm/charts/grafana-agent:/helm-docs" \
          -u "$(id -u)" \
          jnorwood/helm-docs
        if ! git diff --exit-code; then
          echo "Helm chart documentation is not up to date. Please run 'make generate-helm-docs' and commit changes!" >&2
          exit 1
        fi
  regenerate-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.10.3
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Regenerate tests (ces) (ces)
      run: |
        make generate-helm-tests

        if [ ! -z "$(git status --porcelain)" ]; then
          echo "Helm chart tests are not up to date. Please run 'make generate-helm-tests' and commit changes!" >&2
          exit 1
        fi
  lint-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.10.3
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
        check-latest: true
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Install chart-testing (ces) (ces)
      uses: helm/chart-testing-action@v2.6.1
    - name: Determine changed charts
      id: list-changed
      run: |
        changed=$(ct list-changed --config ./operations/helm/ct.yaml)

        if [[ -n "$changed" ]]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    - name: Lint charts
      run: ct lint --config ./operations/helm/ct.yaml
    - name: Create kind cluster
      uses: helm/kind-action@v1.10.0
      if: steps.list-changed.outputs.changed == 'true'
    - name: Add dependency chart repos
      if: steps.list-changed.outputs.changed == 'true'
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    - name: Install Prometheus Operator CRDs
      if: steps.list-changed.outputs.changed == 'true'
      run: |
        helm install my-prometheus-operator-crds prometheus-community/prometheus-operator-crds --version 6.0.0
    - name: Test charts (ces)
      run: ct install --config ./operations/helm/ct.yaml
