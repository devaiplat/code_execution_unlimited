name: proxystore/proxystore
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  tests:
    timeout-minutes: 10
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          python: 3.8
          toxenv: py38
        - os: ubuntu-latest
          python: 3.9
          toxenv: py39
        - os: ubuntu-latest
          python: 3.10
          toxenv: py310
        - os: ubuntu-latest
          python: 3.11
          toxenv: py311
        - os: ubuntu-latest
          python: 3.12
          toxenv: py312
        - os: macos-14
          python: 3.8
          toxenv: py38
        - os: macos-14
          python: 3.9
          toxenv: py39
        - os: macos-14
          python: 3.10
          toxenv: py310
        - os: macos-14
          python: 3.11
          toxenv: py311
        - os: macos-14
          python: 3.12
          toxenv: py312
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - name: Get pip cache dir
      id: pip-cache-dir
      run: echo "PIP_CACHE_DIR=$(pip cache dir)" >> $GITHUB_ENV
    - name: Use pip cache
      id: pip-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.PIP_CACHE_DIR }}
        key: ${{ matrix.os }}-pip-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: >
          ${{ matrix.os }}-pip-${{ matrix.python }}-
    - name: Install Packages
      run: pip install --upgrade setuptools pip tox virtualenv
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run Tox
      run: tox -e ${{ matrix.toxenv }}
    - name: Verify proxystore home directory not created
      run: |
        # The home directory could be any of the following

        if [[ -n $PROXYSTORE_HOME ]]; then test ! -d $PROXYSTORE_HOME; else true; fi

        if [[ -n $XDG_DATA_HOME ]]; then test ! -d $XDG_DATA_HOME/proxystore; else true; fi

        test ! -d ~/.local/share/proxystore
