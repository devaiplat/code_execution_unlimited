name: immich-app/immich
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  pre-job:
    runs-on: ubuntu-latest
    outputs:
      should_run_web: ${{ steps.found_paths.outputs.web == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_server: ${{ steps.found_paths.outputs.server == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_cli: ${{ steps.found_paths.outputs.cli == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_e2e: ${{ steps.found_paths.outputs.e2e == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_mobile: ${{ steps.found_paths.outputs.mobile == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_ml: ${{ steps.found_paths.outputs.machine-learning == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_e2e_web: ${{ steps.found_paths.outputs.e2e == 'true' || steps.found_paths.outputs.web == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_e2e_server_cli: ${{ steps.found_paths.outputs.e2e == 'true' || steps.found_paths.outputs.server == 'true' || steps.found_paths.outputs.cli == 'true' || steps.should_force.outputs.should_force == 'true' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - id: found_paths
      uses: dorny/paths-filter@v3
      with:
        filters: >
          web:
            - 'web/**'
            - 'open-api/typescript-sdk/**'
          server:
            - 'server/**'
          cli:
            - 'cli/**'
            - 'open-api/typescript-sdk/**'
          e2e:
            - 'e2e/**'
          mobile:
            - 'mobile/**'
          machine-learning:
            - 'machine-learning/**'
    - name: Check if we should force jobs to run
      id: should_force
      run: echo "should_force=${{ github.event_name == 'workflow_dispatch' }}" >> "$GITHUB_OUTPUT"
  server-unit-tests:
    name: Test & Lint Server
    needs: pre-job
    if: true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./server/.nvmrc
    - name: Run npm install
      run: npm ci
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run linter
      run: npm run lint
      if: ${{ !cancelled() }}
    - name: Run formatter
      run: npm run format
      if: ${{ !cancelled() }}
    - name: Run tsc
      run: npm run check
      if: ${{ !cancelled() }}
    - name: Run unit tests & coverage (ces)
      run: npm run test:cov
      if: ${{ !cancelled() }}
  cli-unit-tests:
    name: Unit Test CLI
    needs: pre-job
    if: true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cli
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./cli/.nvmrc
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Setup typescript-sdk
      run: npm ci && npm run build
      working-directory: ./open-api/typescript-sdk
    - name: Install deps
      run: npm ci
    - name: Run linter
      run: npm run lint
      if: ${{ !cancelled() }}
    - name: Run formatter
      run: npm run format
      if: ${{ !cancelled() }}
    - name: Run tsc
      run: npm run check
      if: ${{ !cancelled() }}
    - name: Run unit tests & coverage (ces)
      run: npm run test:cov
      if: ${{ !cancelled() }}
  cli-unit-tests-win:
    name: Unit Test CLI (Windows)
    needs: pre-job
    if: true
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./cli
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./cli/.nvmrc
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Setup typescript-sdk
      run: npm ci && npm run build
      working-directory: ./open-api/typescript-sdk
    - name: Install deps
      run: npm ci
    - name: Run tsc
      run: npm run check
      if: ${{ !cancelled() }}
    - name: Run unit tests & coverage (ces)
      run: npm run test:cov
      if: ${{ !cancelled() }}
  web-unit-tests:
    name: Test & Lint Web
    needs: pre-job
    if: true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./web/.nvmrc
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run setup typescript-sdk
      run: npm ci && npm run build
      working-directory: ./open-api/typescript-sdk
    - name: Run npm install
      run: npm ci
    - name: Run linter
      run: npm run lint
      if: ${{ !cancelled() }}
    - name: Run formatter
      run: npm run format
      if: ${{ !cancelled() }}
    - name: Run svelte checks
      run: npm run check:svelte
      if: ${{ !cancelled() }}
    - name: Run tsc
      run: npm run check:typescript
      if: ${{ !cancelled() }}
    - name: Run unit tests & coverage (ces)
      run: npm run test:cov
      if: ${{ !cancelled() }}
  e2e-tests-lint:
    name: End-to-End Lint
    needs: pre-job
    if: true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./e2e
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./e2e/.nvmrc
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run setup typescript-sdk
      run: npm ci && npm run build
      working-directory: ./open-api/typescript-sdk
      if: ${{ !cancelled() }}
    - name: Install dependencies
      run: npm ci
      if: ${{ !cancelled() }}
    - name: Run linter
      run: npm run lint
      if: ${{ !cancelled() }}
    - name: Run formatter
      run: npm run format
      if: ${{ !cancelled() }}
    - name: Run tsc
      run: npm run check
      if: ${{ !cancelled() }}
  e2e-tests-server-cli:
    name: End-to-End Tests (Server & CLI)
    needs: pre-job
    if: true
    runs-on: mich
    defaults:
      run:
        working-directory: ./e2e
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./e2e/.nvmrc
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run setup typescript-sdk
      run: npm ci && npm run build
      working-directory: ./open-api/typescript-sdk
      if: ${{ !cancelled() }}
    - name: Run setup cli
      run: npm ci && npm run build
      working-directory: ./cli
      if: ${{ !cancelled() }}
    - name: Install dependencies
      run: npm ci
      if: ${{ !cancelled() }}
    - name: Docker build
      run: docker compose build
      if: ${{ !cancelled() }}
    - name: Run e2e tests (api & cli) (ces)
      run: npm run test
      if: ${{ !cancelled() }}
  e2e-tests-web:
    name: End-to-End Tests (Web)
    needs: pre-job
    if: true
    runs-on: mich
    defaults:
      run:
        working-directory: ./e2e
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./e2e/.nvmrc
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run setup typescript-sdk
      run: npm ci && npm run build
      working-directory: ./open-api/typescript-sdk
      if: ${{ !cancelled() }}
    - name: Install dependencies
      run: npm ci
      if: ${{ !cancelled() }}
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      if: ${{ !cancelled() }}
    - name: Docker build
      run: docker compose build
      if: ${{ !cancelled() }}
    - name: Run e2e tests (web) (ces)
      run: npx playwright test
      if: ${{ !cancelled() }}
  mobile-unit-tests:
    name: Unit Test Mobile
    needs: pre-job
    if: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version-file: ./mobile/pubspec.yaml
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests (ces) (ces)
      working-directory: ./mobile
      run: flutter test -j 1
  ml-unit-tests:
    name: Unit Test ML
    needs: pre-job
    if: true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./machine-learning
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: poetry
    - name: Install dependencies
      run: |
        poetry install --with dev --with cpu
    - name: Lint with ruff
      run: |
        poetry run ruff check --output-format=github app export
    - name: Check black formatting
      run: |
        poetry run black --check app export
    - name: Run mypy type checking
      run: |
        poetry run mypy --install-types --non-interactive --strict app/
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run tests and coverage (ces) (ces)
      run: |
        poetry run pytest app --cov=app --cov-report term-missing
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        ignore_paths: '**/open-api/** **/openapi/** **/node_modules/**'
  generated-api-up-to-date:
    name: OpenAPI Clients
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./server/.nvmrc
    - name: Install server dependencies
      run: npm --prefix=server ci
    - name: Build the app
      run: npm --prefix=server run build
    - name: Run API generation
      run: make open-api
    - name: Find file changes
      uses: tj-actions/verify-changed-files@v20
      id: verify-changed-files
      with:
        files: >
          mobile/openapi

          open-api/typescript-sdk

          open-api/immich-openapi-specs.json
    - name: Verify files have not changed
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        echo "ERROR: Generated files not up to date!"

        echo "Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}"

        exit 1
  generated-typeorm-migrations-up-to-date:
    name: TypeORM Checks
    runs-on: ubuntu-latest
    services:
      postgres:
        image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: immich
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432:5432
    defaults:
      run:
        working-directory: ./server
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ./server/.nvmrc
    - name: Install server dependencies
      run: npm ci
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Build the app
      run: npm run build
    - name: Run existing migrations
      run: npm run typeorm:migrations:run
    - name: Test npm run schema:reset command works (ces)
      run: npm run typeorm:schema:reset
    - name: Generate new migrations
      continue-on-error: true
      run: npm run typeorm:migrations:generate ./src/migrations/TestMigration
    - name: Find file changes
      uses: tj-actions/verify-changed-files@v20
      id: verify-changed-files
      with:
        files: >
          server/src/migrations/
    - name: Verify migration files have not changed
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        echo "ERROR: Generated migration files not up to date!"

        echo "Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}"

        exit 1
    - name: Run SQL generation
      run: npm run sync:sql
      env:
        DB_URL: postgres://postgres:postgres@localhost:5432/immich
    - name: Find file changes
      uses: tj-actions/verify-changed-files@v20
      id: verify-changed-sql-files
      with:
        files: >
          server/src/queries
    - name: Verify SQL files have not changed
      if: steps.verify-changed-sql-files.outputs.files_changed == 'true'
      run: |
        echo "ERROR: Generated SQL files not up to date!"

        echo "Changed files: ${{ steps.verify-changed-sql-files.outputs.changed_files }}"

        exit 1
