name: ScottAgirs/remix-import
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
permissions:
  actions: write
  contents: read
jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
    - name: "\U0001F6D1 Cancel Previous Runs"
      uses: styfle/cancel-workflow-action@0.9.1
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: ⎔ Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: "\U0001F4E5 Download deps"
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: "\U0001F52C Lint"
      run: npm run lint
  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
    - name: "\U0001F6D1 Cancel Previous Runs"
      uses: styfle/cancel-workflow-action@0.9.1
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: ⎔ Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: "\U0001F4E5 Download deps"
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: "\U0001F50E Type check"
      run: npm run typecheck --if-present
  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
    - name: "\U0001F6D1 Cancel Previous Runs"
      uses: styfle/cancel-workflow-action@0.9.1
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: ⎔ Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: "\U0001F4E5 Download deps"
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: ⚡ Run vitest (ces) (ces)
      run: npm run test -- --coverage
  cypress:
    name: ⚫️ Cypress
    runs-on: ubuntu-latest
    steps:
    - name: "\U0001F6D1 Cancel Previous Runs"
      uses: styfle/cancel-workflow-action@0.9.1
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: "\U0001F3C4 Copy test env vars (ces) (ces)"
      run: cp .env.example .env
    - name: ⎔ Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: "\U0001F4E5 Download deps"
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
    - name: "\U0001F6E0 Setup Database"
      run: npx prisma migrate reset --force
    - name: ⚙️ Build
      run: npm run build
    - name: "\U0001F333 Cypress run"
      uses: cypress-io/github-action@v3
      with:
        start: npm run start:mocks
        wait-on: http://localhost:8811
      env:
        PORT: 8811
  build:
    name: "\U0001F433 Build"
    if: true
    runs-on: ubuntu-latest
    steps:
    - name: "\U0001F6D1 Cancel Previous Runs"
      uses: styfle/cancel-workflow-action@0.9.1
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - name: "\U0001F440 Read app name"
      uses: SebRollen/toml-action@v1.0.0
      id: app_name
      with:
        file: fly.toml
        field: app
    - name: "\U0001F433 Set up Docker Buildx"
      uses: docker/setup-buildx-action@v1
    - name: ⚡️ Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: >
          ${{ runner.os }}-buildx-
    - name: "\U0001F69A Move cache"
      run: |
        rm -rf /tmp/.buildx-cache

        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
