name: tenstorrent/tt-metal
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
jobs:
  unit-tests-slow-dispatch:
    name: ${{ inputs.arch }} ${{ inputs.runner-label }}
    runs-on:
    - ${{ inputs.runner-label }}
    - cloud-virtual-machine
    - in-service
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ inputs.arch}}
      TT_METAL_SLOW_DISPATCH_MODE: 1
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    steps:
    - uses: tenstorrent-metal/metal-workflows/.github/actions/checkout-with-submodule-lfs@v2.0.0
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: ./.github/actions/prepare-metal-run
      with:
        arch: ${{ inputs.arch }}
    - name: Set up dynamic env vars for build
      run: |
        echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - name: Run pre/post regression tests (ces) (ces)
      timeout-minutes: ${{ inputs.timeout }}
      run: |
        source ${{ github.workspace }}/python_env/bin/activate

        ./tests/scripts/run_tests.sh --tt-arch $ARCH_NAME --pipeline-type post_commit --dispatch-mode slow
    - uses: ./.github/actions/slack-report
      if: ${{ failure() }}
      with:
        slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        owner: U0593J2RQRZ
