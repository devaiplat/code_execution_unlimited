on:
  workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: Base64 encoded patch content
        required: false
      command:
        description: Command to run
        required: false
      ref:
        description: The repo branch, tag, or commit SHA to checkout
        required: false
name: SAP/luigi
env:
  CYPRESS_CACHE_FOLDER: ~/cypress-binary-cache
  CYPRESS_DASHBOARD_RECORD_KEY: ${{ secrets.CYPRESS_DASHBOARD }}
jobs:
  prepare:
    uses: ./.github/workflows/prepare.yml
    secrets: inherit
    with:
      buildcache_key: buildcache-${{ github.ref }}
  unit:
    name: Unit Tests
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v4
      with:
        node-version: 20.14.0
    - uses: actions/cache@v4
      with:
        path: >
          ~/tmp_build

          ~/cypress-binary-cache
        key: buildcache-${{ github.ref }}
    - run: cp -r ~/tmp_build/* .
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm test --prefix core || exit 1
  mock_engine:
    name: Mock Engine Tests
    runs-on: ubuntu-latest
    needs: prepare
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v4
      with:
        node-version: 20.14.0
    - uses: actions/cache@v4
      with:
        path: >
          ~/tmp_build

          ~/cypress-binary-cache
        key: buildcache-${{ github.ref }}
    - run: cp -r ~/tmp_build/* .
    - run: npm i -g cypress
    - run: npm i -g live-server
    - run: bash ./test/mockengine.sh || exit 1
  container_unit_tests:
    name: Container Unit Tests
    runs-on: ubuntu-latest
    needs: prepare
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v4
      with:
        node-version: 20.14.0
    - uses: actions/cache@v4
      with:
        path: >
          ~/tmp_build

          ~/cypress-binary-cache
        key: buildcache-${{ github.ref }}
    - run: cp -r ~/tmp_build/* .
    - name: Apply patch
      shell: bash
      run: |

                if [ -n "${{ github.event.inputs.patch }}" ]; then
                   echo "Patch input provided. Applying patch..."
                   echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
                   echo "Decoded patch content:"
                   cat patch.diff 
                   echo "Apply the patch:"
                   git apply --verbose patch.diff
                 else
                   echo "No patch input provided. Skipping patch application."
                 fi
                echo "Print git diff on local repo"
                git diff
    - name: Run custom command
      shell: bash
      run: |
         
                if [ -n "${{ github.event.inputs.command }}" ]; then
                   echo "Start running custom command"
                   echo "${{ github.event.inputs.command }}"
                   output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
                   echo "Decoded custom command is:"
                   echo $output
                   echo "!!==================================!!"
                   echo "Custom command output:"
                   echo "!!==================================!!"
                   eval $output
                   echo "!!==================================!!"
                   echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
                   echo "Finished running custom command!"
                   echo "!!== RUN COMPLETED ==!!"
                fi
    - name: Exit if custom command was run
      if: env.RAN_CUSTOM_COMMAND == 'true'
      shell: bash
      run: |

                echo "Exiting job after custom command run"
                exit 1
    - run: npm test --prefix container || exit 1
  container_e2e_tests:
    name: Container E2E Tests
    runs-on: ubuntu-latest
    needs: prepare
    env:
      USE_CYPRESS_DASHBOARD: false
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v4
      with:
        node-version: 20.14.0
    - uses: actions/cache@v4
      with:
        path: >
          ~/tmp_build

          ~/cypress-binary-cache
        key: buildcache-${{ github.ref }}
    - run: cp -r ~/tmp_build/* .
    - run: bash ./container/run-container-e2e.sh || exit 1
  e2e:
    name: Integration Tests
    needs: prepare
    runs-on: ubuntu-latest
    env:
      USE_CYPRESS_DASHBOARD: true
    steps:
    - uses: actions/setup-node@v4
      with:
        node-version: 20.14.0
    - uses: actions/cache@v4
      with:
        path: >
          ~/tmp_build

          ~/cypress-binary-cache
        key: buildcache-${{ github.ref }}
    - run: cp -r ~/tmp_build/* .
    - run: sudo apt-get install libgconf-2-4 libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    - run: npm install --prefix test/e2e-test-application @babel/plugin-proposal-class-properties
    - run: ls test
    - run: bash ./test/e2e-js.sh || exit 1
    - run: bash ./test/e2e-angular.sh || exit 1
  docu_check:
    name: Check Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.repoName }}
        ref: ${{ github.event.inputs.ref }}
    - uses: actions/setup-node@v4
      with:
        node-version: 20.14.0
    - run: cd ./scripts && npm ci
    - run: bash ./scripts/docuCheck.sh
